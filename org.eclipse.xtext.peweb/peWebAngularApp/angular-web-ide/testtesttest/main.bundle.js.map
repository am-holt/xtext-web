{"version":3,"sources":["/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/$_lazy_route_resource lazy","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/abstract-syntax-tree.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/app-routing.module.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/app.component.css","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/app.component.html","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/app.component.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/app.module.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.css","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.html","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-node-editor.component.css","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-node-editor.component.html","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-node-editor.component.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/editor/editor.component.css","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/editor/editor.component.html","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/editor/editor.component.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/file-details.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/file.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/language-spec.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/mockServices/available-language.service.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/mockServices/message.service.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/mockServices/mock-languages.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/node-details.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/available-languages.service.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/edit.service.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/language.service.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/message.service.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/projects.service.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/add-reference-response.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/get-node-response.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/remove-reference-response.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/save-file-response.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/update-node-response.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/valid-node-response.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/startup/startup.component.css","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/startup/startup.component.html","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/startup/startup.component.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/treeView/tree-view.component.css","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/treeView/tree-view.component.html","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/treeView/tree-view.component.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/environments/environment.ts","/home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;;ACVA;AAAA;IASC,4DAA4D;IAC5D,4BAAY,GAAsB;QARlC,gDAAgD;QAChD,aAAQ,GAAG,KAAK,CAAC;QAQhB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,GAAG,CAAC,CAAU,UAAY,EAAZ,QAAG,CAAC,QAAQ,EAAZ,cAAY,EAAZ,IAAY;YAArB,IAAI,CAAC;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9C;IACF,CAAC;IAED,mCAAM,GAAN;QACC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IAChC,CAAC;IAED,0CAAa,GAAb;QACC,EAAE,EAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAE,CAAC,CAAC,EAAC;YACpD,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;YACtB,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;QAAA,IAAI,EAAC;YACL,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;IACF,CAAC;IAED,qCAAQ,GAAR,UAAS,KAAwB;QAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,wCAAW,GAAX,UAAY,QAAe;QAC1B,GAAG,EAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAE,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC;YAC3C,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,QAAS,CAAC,EAAC;gBACzC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAC3B,CAAC;QACF,CAAC;IACF,CAAC;IACF,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;AC7CwC;AACc;AACQ;AACH;AAE5D,IAAM,MAAM,GAAW;IACtB,EAAC,IAAI,EAAC,SAAS,EAAE,SAAS,EAAC,oFAAgB,EAAE;IAC7C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAC,iFAAe,EAAC;IAC7C,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAC,UAAU,EAAE,SAAS,EAAC,MAAM,EAAC;CACnD;AASD;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAN5B,uEAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAC7B;YACD,OAAO,EAAE,CAAC,qEAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;AClB7B;AACA;;;AAGA;AACA,iCAAkC,uBAAuB,GAAG;;AAE5D;;;AAGA;AACA,2C;;;;;;;ACXA,oD;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,QAAQ,CAAC;IACnB,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AAGW;AACT;AACgB;AACN;AACO;AACyB;AAC7B;AACE;AACK;AAC8B;AACM;AACjD;AAC6B;AACrB;AA4B9D;IAAA;IAAyB,CAAC;IAAb,SAAS;QA1BrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,oFAAgB;gBAChB,iFAAe;gBACf,yFAAiB;gBACjB,uHAA0B;gBAC1B,6HAAsB;aAEvB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,8EAAgB;gBAChB,6EAAgB;gBAChB,mEAAW;aACZ;YACD,SAAS,EAAE;gBACT,qFAAc;gBACd,oFAAe;gBACf,8GAA4B;gBAC5B,4EAAW;gBACX,yGAAyB;gBACzB,oFAAe;aAChB;YACD,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;AC9CtB;AACA;;;AAGA;AACA,iCAAkC,eAAe,GAAG;;AAEpD;;;AAGA;AACA,2C;;;;;;;ACXA,2Q;;;;;;;;;;;;;;;;;;;ACAkG;AAQlG;IAEE;QAQU,UAAK,GAAG,IAAI,mEAAY,EAAO,CAAC;IAR1B,CAAC;IAEjB,yCAAQ,GAAR;QACC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;IAC9B,CAAC;IAQD,qCAAI,GAAJ,UAAK,GAAO;QACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,0DAA0D;QAC1D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC;IAXQ;QAAR,oEAAK,EAAE;;wDAAe;IACd;QAAR,oEAAK,EAAE;;gEAAmB;IACjB;QAAT,qEAAM,EAAE;;yDAAiC;IAV/B,sBAAsB;QANlC,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;YAG1B,aAAa,EAAE,0EAAiB,CAAC,IAAI;SACtC,CAAC;;OACW,sBAAsB,CAoBlC;IAAD,6BAAC;CAAA;AApBkC;;;;;;;;ACRnC;AACA;;;AAGA;AACA,8CAA+C,oBAAoB,uBAAuB,GAAG,UAAU,sBAAsB,GAAG,kBAAkB,4BAA4B,0BAA0B,GAAG,aAAa,oBAAoB,wBAAwB,uBAAuB,uBAAuB,uBAAuB,GAAG;;AAE5U;;;AAGA;AACA,2C;;;;;;;ACXA,yEAAyE,uMAAuM,UAAU,IAAI,UAAU,yVAAyV,UAAU,wKAAwK,cAAc,OAAO,gBAAgB,4GAA4G,UAAU,sH;;;;;;;;;;;;;;;;;;;;;;ACAl4B;AACO;AAC7B;AACT;AAS7C;IAEE,oCACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,6CAAQ,GAAR;IACA,CAAC;IAMD,yCAAI,GAAJ,UAAK,CAAM;QACT,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC1B,CAAC;IAED,oDAAe,GAAf,UAAgB,GAAc,EAAE,KAAU;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE9B,wBAAwB;QACxB,kBAAkB;QAClB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,WAAC,IAAE,WAAI,EAAJ,CAAI,CAAC,CAAC;QAC/H,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,WAAC,IAAE,WAAI,EAAJ,CAAI,CAAC,CAAC;IAC/H,CAAC;IAGD,sDAAiB,GAAjB,UAAkB,GAAc;QAAhC,iBAGC;QAFC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,WAAC,IAAE,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAhC,CAAgC,CAAC,CAAC;IACjJ,CAAC;IAEF,yDAAoB,GAApB,UAAqB,MAAc,EAAE,GAAa;QAAlD,iBAKC;QAJE,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC;aACzG,SAAS,CAAC,WAAC,IAAG,EAAE,EAAC,CAAC,CAAC,EAAC;YAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC;QAAA,CAAC;QAAA,IAAI,EAAC;YAAA,OAAO,CAAC,KAAK,CAAC,0BAA0B,CAAC;QAAA,CAAC,EAAC,CAAC,CAAC;IAEnH,CAAC;IA5BS;QAAR,oEAAK,EAAE;;8DAAgB;IACf;QAAR,oEAAK,EAAE;kCAAc,kEAAW;mEAAC;IACzB;QAAR,oEAAK,EAAE;kCAAc,kEAAW;mEAAC;IAXvB,0BAA0B;QANtC,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;YAG/B,aAAa,EAAE,0EAAiB,CAAC,IAAI;SACtC,CAAC;yCAIuB,2EAAW;OAHvB,0BAA0B,CAuCtC;IAAD,iCAAC;CAAA;AAvCsC;;;;;;;;ACZvC;AACA;;;AAGA;AACA,oCAAqC,wBAAwB,IAAI,gBAAgB,gBAAgB,iBAAiB,qBAAqB,GAAG,WAAW,kBAAkB,yBAAyB,GAAG,+BAA+B,mBAAmB,2BAA2B,iBAAiB,uBAAuB,uBAAuB,uBAAuB,GAAG,0BAA0B,mBAAmB,2BAA2B,iBAAiB,uBAAuB,uBAAuB,uBAAuB,GAAG,oBAAoB,0BAA0B,sBAAsB,GAAG,+BAA+B,oBAAoB,iBAAiB,wBAAwB,uBAAuB,uBAAuB,uBAAuB,GAAG,4BAA4B,2BAA2B,GAAG,eAAe,eAAe,iBAAiB,gBAAgB,GAAG,iBAAiB,eAAe,iBAAiB,gBAAgB,GAAG,gBAAgB,eAAe,iBAAiB,uBAAuB,iBAAiB,GAAG,iBAAiB,sBAAsB,IAAI,qCAAqC,uBAAuB,2BAA2B,iBAAiB,iBAAiB,GAAG,gDAAgD,uBAAuB,uBAAuB,uBAAuB,GAAG,6CAA6C,6BAA6B,GAAG;;AAE53C;;;AAGA;AACA,2C;;;;;;;ACXA,uCAAuC,qDAAqD,sBAAsB,wNAAwN,WAAW,uWAAuW,eAAe,+a;;;;;;;;;;;;;;;;;;;;;;ACAzpB;AAED;AAEjD,4FAA4F;AAC/B;AACE;AAc/D;IAOE,yBACS,KAAoB,EACpB,oBAAqC,EACrC,cAA+B;QAF/B,UAAK,GAAL,KAAK,CAAe;QACpB,yBAAoB,GAApB,oBAAoB,CAAiB;QACrC,mBAAc,GAAd,cAAc,CAAiB;IACpC,CAAC;IAEL,kCAAQ,GAAR;QAAA,iBAMC;QAJA,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACf,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,OAAO,GAAG,GAAG,EAAlB,CAAkB,CAAC,CAAC;QACxE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAgB;QAAzB,iBAIC;QAHC,uBAAuB;QACvB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAE,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,WAAC,IAAE,YAAI,CAAC,QAAQ,GAAG,CAAC,EAAjB,CAAiB,CAAC,CAAC;IAC5F,CAAC;IAED,sCAAY,GAAZ;QAAA,iBAcC;QAbA,IAAI,IAAI,GAAY,EAAE,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAM,IAAI,IAAI,EAAE,EAAE,CAAC;YACjB,IAAI,IAAI,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;YAC7C,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACjB,MAAM,EAAC,4BAA4B;YACrC,CAAC;YAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,uBAAuB,EAAE,IAAI,IAAI,EAAtC,CAAsC,CAAC,IAAI,IAAI,CAAC,EAAC;gBACzF,KAAK,CAAC,0BAA0B,CAAC,CAAC;gBAClC,IAAI,GAAG,EAAE,CAAC;YACZ,CAAC;QAEH,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,oBAAU,IAAI,YAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAnC,CAAmC,CAAC,CAAC;IACnI,CAAC;IAED,uCAAa,GAAb,UAAc,IAAuB;QAArC,iBAEC;QADC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,WAAW,GAAG,CAAC,EAApB,CAAoB,CAAC,CAAC;IACvH,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,WAAC,IAAE,WAAI,EAAJ,CAAI,CAAC,CAAC;IACjG,CAAC;IAjDU,eAAe;QAL3B,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCASe,uEAAc;YACE,mFAAe;YACrB,mFAAe;OAV7B,eAAe,CAkD3B;IAAD,sBAAC;CAAA;AAlD2B;;;;;;;;;ACpB5B;AAAA;IAIC,qBAAY,IAAW;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAEM,kCAAY,GAAnB;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IACzD,CAAC;IAEM,6CAAuB,GAA9B;QACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3D,CAAC;IACF,kBAAC;AAAD,CAAC;;;;;;;;;;ACZD;AAAA;IAIC,cAAY,QAA4B,EAAE,OAAmB;QAC5D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IACF,WAAC;AAAD,CAAC;;;;;;;;;;ACXD;AAAA;IAIC,sBAAY,IAAY,EAAE,GAAW;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;IAC1B,CAAC;IACF,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACR0C;AAEH;AACmC;AAGxB;AAEH;AAIhD;IACA,IAAI;IACH,sCACS,cAA6B,EAC7B,IAAe;QADf,mBAAc,GAAd,cAAc,CAAe;QAC7B,SAAI,GAAJ,IAAI,CAAW;IACrB,CAAC;IAAA,CAAC;IAEJ,mDAAY,GAAZ;QAEC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,yDAAyD,CAAC,CAAC;QAC1F,MAAM,CAAC,sEAAE,CAAC,qEAAY,CAAC;IACxB,CAAC;IAXU,4BAA4B;QADxC,yEAAU,EAAE;yCAIY,wEAAc;YACxB,wEAAU;OAJZ,4BAA4B,CAYxC;IAAD,mCAAC;CAAA;AAZwC;;;;;;;;;;;;;;;;;ACZE;AAG3C;IADA;QAGQ,aAAQ,GAAa,EAAE,CAAC;IAShC,CAAC;IAPA,mCAAU,GAAV,UAAW,GAAW;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,sCAAa,GAAb;QACC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACpB,CAAC;IAVW,cAAc;QAD1B,yEAAU,EAAE;OACA,cAAc,CAW1B;IAAD,qBAAC;CAAA;AAX0B;;;;;;;;;;ACDpB,IAAM,YAAY,GACxB,EAAC,IAAI,EAAC,OAAO,EAAE,aAAa,EAAC,QAAQ,EAAC;;;;;;;;;;;;ACDvC;AAAA;IAAA;IAIA,CAAC;IAAD,gBAAC;AAAD,CAAC;;AAED;IAAA;IAGA,CAAC;IAAD,gBAAC;AAAD,CAAC;;AAED;IAAA;IAGA,CAAC;IAAD,oBAAC;AAAD,CAAC;;AAED;IAKC,qBAAY,IAAgB,EAAC,IAAgB,EAAC,EAAS,EAAC,GAAsB;QAC7E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IAChB,CAAC;IACF,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AC7B0C;AAEH;AACmC;AAGxB;AAEW;AAI9D;IACC,mCACS,cAA6B,EAC7B,IAAe;QADf,mBAAc,GAAd,cAAc,CAAe;QAC7B,SAAI,GAAJ,IAAI,CAAW;IACrB,CAAC;IAAA,CAAC;IAEJ,gDAAY,GAAZ;QAEC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,yDAAyD,CAAC,CAAC;QAC1F,MAAM,CAAC,sEAAE,CAAC,kFAAY,CAAC;IACxB,CAAC;IAVU,yBAAyB;QADrC,yEAAU,EAAE;yCAGY,wEAAc;YACxB,wEAAU;OAHZ,yBAAyB,CAWrC;IAAD,gCAAC;CAAA;AAXqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZK;AACgC;AAK5C;AAEkC;AAKlC;AAC8B;AAE8B;AACG;AACK;AACS;AAI5G;IAEE,qBACU,cAA+B,EAC/B,IAAiB;QADjB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,SAAI,GAAJ,IAAI,CAAa;QAIV,eAAU,GAAY,aAAa,CAAC;IAH/C,CAAC;IAKP,6BAAO,GAAP,UAAQ,MAAa,EAAE,WAAuB;QAC5C,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EACnC,EAAC,MAAM,EAAE,IAAI,wEAAU,EAAE,CAAC,MAAM,CAAC,aAAa,EAAC,UAAU,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,cAAc,EAAC,MAAM,CAAC,EAAC,CAAC;aAC/H,GAAG,CAAC,WAAC,IAAG,WAAI,mDAAI,CAAC,IAAI,iFAAkB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,EAAvD,CAAuD,CAAC,CAAC;QACpE,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;IAED,uCAAiB,GAAjB,UAAkB,MAAa,EAAE,WAAuB,EAAE,MAAa,EAAE,aAAoB,EAAE,QAAY;QAC1G,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,IAAI,CAAC,UAAU,EACvD,EAAC,MAAM,EAAE,IAAI,wEAAU,EAAE;iBACvB,MAAM,CAAC,aAAa,EAAC,eAAe,CAAC;iBACrC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC;iBACrC,MAAM,CAAC,cAAc,EAAC,MAAM,CAAC;iBAC7B,MAAM,CAAC,SAAS,EAAC,MAAM,CAAC;iBACvB,MAAM,CAAC,gBAAgB,EAAC,aAAa,CAAC;iBACtC,MAAM,CAAC,OAAO,EAAC,QAAQ,CAAC;SAC1B,CAAC,CAAC,GAAG,CAAE,WAAC,IAAI,WAAI,yFAAiB,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC,CAAC;IAC3C,CAAC;IAED,qCAAe,GAAf,UAAgB,MAAc,EAAE,WAAwB,EAAE,MAAc,EAAE,aAAqB,EAAE,QAAa;QAC5G,qBAAqB;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,IAAI,CAAC,UAAU,EACzD;YACE,MAAM,EAAE,IAAI,wEAAU,EAAE;iBACrB,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC;iBACpC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC;iBACrC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC;iBAC9B,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC;iBACzB,MAAM,CAAC,gBAAgB,EAAE,aAAa,CAAC;iBACvC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC;SAC7B,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,2FAAkB,CAAC,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAC;IAC3C,CAAC;IAED,kCAAY,GAAZ,UAAa,MAAc,EAAE,WAAwB,EAAE,MAAc,EAAE,aAAqB;QAE1F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAA0B,IAAI,CAAC,UAAU,EAC3D;YACE,MAAM,EAAE,IAAI,wEAAU,EAAE;iBACrB,MAAM,CAAC,aAAa,EAAE,eAAe,CAAC;iBACtC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC;iBACrC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC;iBAC9B,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC;iBACzB,MAAM,CAAC,gBAAgB,EAAE,aAAa,CAAC;SAC3C,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,+FAAoB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAApC,CAAoC,CAAC,CAAC;IACtD,CAAC;IAED,qCAAe,GAAf,UAAgB,MAAc,EAAE,WAAwB,EAAE,MAAc,EAAE,UAAkB,EAAE,aAAoB;QAEhH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAA6B,IAAI,CAAC,UAAU,EAC9D;YACE,MAAM,EAAE,IAAI,wEAAU,EAAE;iBACrB,MAAM,CAAC,aAAa,EAAE,kBAAkB,CAAC;iBACzC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC;iBACrC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC;iBAC9B,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC;iBACzB,MAAM,CAAC,cAAc,EAAE,UAAU,CAAC;iBAClC,MAAM,CAAC,gBAAgB,EAAE,aAAa,CAAC;SAC3C,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,WAAI,qGAAuB,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,EAA3C,CAA2C,CAAC,CAAC;IAC7D,CAAC;IApEU,WAAW;QADvB,yEAAU,EAAE;yCAIgB,qFAAc;YACxB,wEAAU;OAJhB,WAAW,CA2FvB;IAAD,kBAAC;CAAA;AA3FuB;;;;;;;;;;;;;;;;;;;;;;;ACtBmB;AAGgC;AAGT;AAClB;AAKhD;IAEC,yBACS,cAA6B,EAC7B,IAAe;QADf,mBAAc,GAAd,cAAc,CAAe;QAC7B,SAAI,GAAJ,IAAI,CAAW;QAGP,eAAU,GAAY,aAAa,CAAC;IAFlD,CAAC;IAAA,CAAC;IAIJ,sCAAY,GAAZ;QAEC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,yDAAyD,CAAC,CAAC;QAC1F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,IAAI,CAAC,UAAU,EACzD,EAAC,MAAM,EAAE,IAAI,wEAAU,EAAE;iBACvB,MAAM,CAAC,aAAa,EAAC,cAAc,CAAC;SACrC,CAAC,CAAC,GAAG,CAAC,WAAC;YAAK,OAAO,CAAC,GAAG,CAAG,CAAC,CAAC,SAAS,CAAC,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACjC,MAAM,CAAC,CAAC,IAAI,oEAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;QAAA,CAAC,CAAC,CAAC;IACpF,CAAC;IAlBU,eAAe;QAD3B,yEAAU,EAAE;yCAIY,qFAAc;YACxB,wEAAU;OAJZ,eAAe,CAmB3B;IAAD,sBAAC;CAAA;AAnB2B;;;;;;;;;;;;;;;;;ACbe;AAG3C;IADA;QAGQ,aAAQ,GAAa,EAAE,CAAC;IAShC,CAAC;IAPA,mCAAU,GAAV,UAAW,GAAW;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,sCAAa,GAAb;QACC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACpB,CAAC;IAVW,cAAc;QAD1B,yEAAU,EAAE;OACA,cAAc,CAW1B;IAAD,qBAAC;CAAA;AAX0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHgB;AACgC;AAInC;AACT;AAEkC;AAInB;AACf;AAC8B;AAEuB;AACG;AAGvF;IAEE,yBACU,cAA+B,EAC/B,IAAiB;QADjB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,SAAI,GAAJ,IAAI,CAAa;QAGV,eAAU,GAAY,aAAa,CAAC;IAF/C,CAAC;IAIP,2CAAiB,GAAjB;QAAA,iBAKC;QAJA,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EACjC,EAAC,MAAM,EAAE,IAAI,wEAAU,EAAE,CAAC,MAAM,CAAC,aAAa,EAAC,aAAa,CAAC,EAAC,CAAC;aAC9D,GAAG,CAAE,aAAG,IAAI,OAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAA/B,CAA+B,CAAC,CAAC,GAAG,CAAC,WAAC,IAAG,QAAC,CAAC,GAAG,CAAC,KAAI,CAAC,sBAAsB,CAAC,EAAlC,CAAkC,CAAC,CAAC;IAC9F,CAAC;IAEO,gDAAsB,GAA9B,UAA+B,CAAQ;QACrC,MAAM,CAAC,EAAC,EAAE,EAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC;IACxB,CAAC;IAED,uCAAa,GAAb,UAAc,IAAY;QACzB,IAAI,CAAC,GAAwB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EACvD,EAAC,MAAM,EAAE,IAAI,wEAAU,EAAE,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,WAAC,IAAE,WAAI,EAAJ,CAAI,CAAC,CAAC;QACpG,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;IAED,oCAAU,GAAV,UAAW,EAAS;QAClB,IAAI,CAAC,GAAG,CAAC,yBAAyB,GAAG,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,GAAyB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EACzD,EAAC,MAAM,EAAE,IAAI,wEAAU,EAAE,CAAC,MAAM,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,MAAM,CAAC,MAAM,EAAC,EAAE,CAAC,EAAC,CAAC;aACjF,GAAG,CAAC,WAAC,IAAG,QAAC,CAAC,OAAO,CAAC,EAAV,CAAU,CAAC;aACnB,GAAG,CAAmB,YAAE,IAAK,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,WAAC,IAAG,WAAI,kEAAW,CAAC,CAAC,CAAC,EAAlB,CAAkB,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC,OAAO,EAAC,EAAC,IAAI,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAC,KAAK,EAAC,KAAK,EAAC,GAAC,CAAC,CAAC;QAC3H,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;IAED,iCAAO,GAAP,UAAQ,MAAa,EAAE,WAAuB;QAE5C,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EACnC,EAAC,MAAM,EAAE,IAAI,wEAAU,EAAE,CAAC,MAAM,CAAC,aAAa,EAAC,UAAU,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,cAAc,EAAC,MAAM,CAAC,EAAC,CAAC;aAC/H,GAAG,CAAC,WAAC,IAAG,WAAI,mDAAI,CAAC,IAAI,iFAAkB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,EAAvD,CAAuD,CAAC,CAAC;QACpE,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,2CAA2C;IAC3C,8EAA8E;IAC9E,iCAAO,GAAP,UAAQ,MAAc,EAAE,WAAuB,EAAE,IAAuB;QACtE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,IAAI,CAAC,UAAU,EACtD,EAAC,MAAM,EAAE,IAAI,wEAAU,EAAE,CAAC,MAAM,CAAC,aAAa,EAAC,UAAU,CAAC;iBACzD,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC;iBACrC,MAAM,CAAC,cAAc,EAAC,MAAM,CAAC;iBAC7B,MAAM,CAAC,SAAS,EAAC,IAAI,CAAC,MAAM,CAAC,EAAC,CAAC;aAC/B,GAAG,CAAC,WAAC,IAAI,WAAI,qFAAe,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,EAA3C,CAA2C,CAAC,CAAC;IAE3D,CAAC;IAED,0CAAgB,GAAhB,UAAiB,MAAa,EAAG,QAAe;QAC9C,IAAI,CAAC,GAAG,CAAC,cAAc,GAAE,QAAQ,GAAG,aAAa,GAAG,MAAM,CAAC,CAAC;QAE5D,IAAI,CAAC,GAA6B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAC7D,EAAC,MAAM,EAAE,IAAI,wEAAU,EAAE,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,CAAC;iBAC1D,MAAM,CAAC,MAAM,EAAC,QAAQ,CAAC;iBACvB,MAAM,CAAC,cAAc,EAAC,MAAM,CAAC,EAAC,CAAC;aAC/B,GAAG,CAAC,WAAC,IAAI,WAAI,kEAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC;QACxC,MAAM,CAAC,CAAC,CAAC;IACX,CAAC;IAED,kCAAQ,GAAR,UAAS,MAAa,EAAG,WAAuB;QAC9C,IAAI,CAAC,GAAG,CAAC,cAAc,GAAE,WAAW,CAAC,IAAI,GAAG,cAAc,GAAG,MAAM,CAAC,CAAC;QAErE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,IAAI,CAAC,UAAU,EACvD,EAAC,MAAM,EAAE,IAAI,wEAAU,EAAE,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC;iBAC3D,MAAM,CAAC,WAAW,EAAC,WAAW,CAAC,IAAI,CAAC;iBACpC,MAAM,CAAC,cAAc,EAAC,MAAM,CAAC,EAAC,CAAC;aAC/B,GAAG,CAAC,WAAC,IAAI,WAAI,uFAAgB,CAAC,CAAC,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACvC,CAAC;IAEO,6BAAG,GAAX,UAAY,OAAc;QACxB,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,oBAAoB,GAAG,OAAO,CAAC,CAAC;IACjE,CAAC;IAED;;;;;OAKG;IACK,qCAAW,GAAnB,UAAwB,SAAuB,EAAE,MAAU;QAA3D,iBAQC;QARuB,mDAAuB;QAC7C,MAAM,CAAC,UAAC,KAAU;YAEhB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,KAAI,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAClD,yDAAyD;YACzD,MAAM,CAAC,sEAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IA/FU,eAAe;QAD3B,yEAAU,EAAE;yCAIgB,qFAAc;YACxB,wEAAU;OAJhB,eAAe,CAgG3B;IAAD,sBAAC;CAAA;AAhG2B;;;;;;;;;;;;ACpBoC;AAEhE;IAAA;IAEA,CAAC;IAAD,8BAAC;AAAD,CAAC;;AAED;IAKC,8BAAY,WAAmC;QAC9C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,iFAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAClE,CAAC;IAED,qCAAM,GAAN;QACC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC1B,CAAC;IACF,2BAAC;AAAD,CAAC;;;;;;;;;;;;;ACjB8C;AAE/C;IAAA;IAIA,CAAC;IAAD,yBAAC;AAAD,CAAC;;AAED;IAEC,yBAAY,WAA8B;QACzC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAChC,CAAC;IAED,wCAAc,GAAd,UAAe,GAAsB;QACpC,MAAM,CAAC,IAAI,kEAAW,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAC,GAAG,CAAC,CAAC;IAC7G,CAAC;IACF,sBAAC;AAAD,CAAC;;;;;;;;;;;ACjBD;AAAA;IAAA;IAEA,CAAC;IAAD,iCAAC;AAAD,CAAC;;AAED;IAIC,iCAAY,WAAsC;QACjD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAChC,CAAC;IAED,4CAAU,GAAV;QACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO;IAChC,CAAC;IACF,8BAAC;AAAD,CAAC;;;;;;;;;;;ACjBD;AAAA;IAAA;IAGA,CAAC;IAAD,0BAAC;AAAD,CAAC;;AAED;IAGE,0BAAY,WAA+B;QACzC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,qCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;IAClC,CAAC;IAED,qCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;IAClC,CAAC;IACH,uBAAC;AAAD,CAAC;;;;;;;;;;;ACnBD;AAAA;IAAA;IAGA,CAAC;IAAD,4BAAC;AAAD,CAAC;;AAED;IAGE,4BAAY,WAAiC;QAC3C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,uCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;IAClC,CAAC;IAED,uCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;IAClC,CAAC;IACH,yBAAC;AAAD,CAAC;;;;;;;;;;;ACnBD;AAAA;IAAA;IAGA,CAAC;IAAD,2BAAC;AAAD,CAAC;;AAED;IAGC,2BAAY,WAAgC;QAC3C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAChC,CAAC;IAED,oCAAQ,GAAR;QACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAC/B,CAAC;IAED,sCAAU,GAAV;QACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;IACjC,CAAC;IACF,wBAAC;AAAD,CAAC;;;;;;;;;ACnBD;AACA;;;AAGA;AACA,iCAAkC,uBAAuB,OAAO,cAAc,wBAAwB,eAAe,iBAAiB,GAAG,gBAAgB,oBAAoB,uBAAuB,2BAA2B,iBAAiB,qBAAqB,gBAAgB,0BAA0B,GAAG,kBAAkB,iBAAiB,2BAA2B,0BAA0B,GAAG;;AAE7Y;;;AAGA;AACA,2C;;;;;;;ACXA,2PAA2P,WAAW,wKAAwK,SAAS,WAAW,WAAW,sB;;;;;;;;;;;;;;;;;;;;;;ACA3Z;AAElD,4FAA4F;AAC7B;AAEtB;AACqB;AAQ9D;IACE,0BACU,oBAAsC,EACtC,eAAiC,EACjC,MAAe;QAFf,yBAAoB,GAApB,oBAAoB,CAAkB;QACtC,oBAAe,GAAf,eAAe,CAAkB;QACjC,WAAM,GAAN,MAAM,CAAS;QAGzB,uBAAkB,GAAoB,EAAE,CAAC;IAFrC,CAAC;IAKL,mCAAQ,GAAR;QACC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,8CAAmB,GAAnB;QAAA,iBAGC;QAFC,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,gBAAgB,GAAG,QAAQ,EAAhC,CAAgC,CAAC,CAAC;QACjG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAED,gDAAqB,GAArB;QAAA,iBAEC;QADA,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,eAAK,IAAK,KAAI,CAAC,kBAAkB,GAAG,KAAK,GAAC,CAAC,CAAC;IAChG,CAAC;IAED,0CAAe,GAAf;QAAA,iBAiBC;QAhBC,8BAA8B;QAC9B,IAAI,IAAI,GAAY,EAAE,CAAC;QAEvB,OAAM,IAAI,IAAI,EAAE,EAAE,CAAC;YACjB,IAAI,IAAI,GAAG,MAAM,CAAC,iCAAiC,CAAC,CAAC;YACrD,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACjB,MAAM,EAAC,4BAA4B;YACrC,CAAC;YAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAO,IAAI,cAAO,CAAC,IAAI,IAAI,IAAI,EAApB,CAAoB,CAAC,IAAI,IAAI,CAAC,EAAC;gBAC7E,KAAK,CAAC,qBAAqB,CAAC,CAAC;gBAC7B,IAAI,GAAG,EAAE,CAAC;YACZ,CAAC;QAEH,CAAC;QACD,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAClD,EAAE,CAAC,SAAS,CAAC,YAAE,IAAI,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC;IAE3D,CAAC;IAzCU,gBAAgB;QAN5B,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAIiC,mFAAe;YACpB,mFAAe;YACxB,+DAAM;OAJd,gBAAgB,CA0C5B;IAAD,uBAAC;CAAA;AA1C4B;;;;;;;;ACd7B;AACA;;;AAGA;AACA,yCAA0C,0BAA0B,iBAAiB,oBAAoB,GAAG,eAAe,iBAAiB,uBAAuB,GAAG,cAAc,oBAAoB,uBAAuB,GAAG,gBAAgB,oBAAoB,GAAG;;AAEzQ;;;AAGA;AACA,2C;;;;;;;ACXA,2DAA2D,+EAA+E,0BAA0B,wDAAwD,eAAe,8S;;;;;;;;;;;;;;;;;;;;ACA1I;AACpC;AAQ7D;IAEE;QAKU,gBAAW,GAAG,IAAI,mEAAY,EAAsB,CAAC;IAL/C,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IAMD,mCAAO,GAAP;QACC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,uGAAuG;IACvG,6CAAiB,GAAjB,UAAkB,GAAsB;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAXS;QAAT,qEAAM,EAAE;;0DAAsD;IAEtD;QAAR,oEAAK,EAAE;kCAAU,iFAAkB;uDAAC;IAT1B,iBAAiB;QAN7B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;YAGrB,aAAa,EAAE,0EAAiB,CAAC,IAAI;SACtC,CAAC;;OACW,iBAAiB,CAoB7B;IAAD,wBAAC;CAAA;AApB6B;;;;;;;;;ACT9B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","export class AbstractSyntaxTree{\n\n\t//Used to display as part of tree-view component\n\texpanded = false;\n\n\tname: string;\n\tnodeId: string;\n\tchildren: AbstractSyntaxTree[]; //Children of the tree\n\n\t//Used so the automatic deserialisation can be given methods\n\tconstructor(ast:AbstractSyntaxTree){\n\t\tthis.name = ast.name;\n\t\tthis.nodeId = ast.nodeId;\n\t\tthis.children = [];\n\t\tfor (var c of ast.children){\n\t\t\tthis.children.push(new AbstractSyntaxTree(c));\n\t\t}\n\t}\n\n\ttoggle(): void {\n\t\tthis.expanded = !this.expanded;\n\t}\n\n\tgetToggleIcon() : string{\n\t\tif(this.children == null || this.children.length==0){\n\t\t\treturn ' ';\n\t\t}\n\t\telse if(this.expanded){\n\t\t\treturn '-';\n\t\t}else{\n\t\t\treturn '+';\n\t\t}\n\t}\n\n\taddChild(child:AbstractSyntaxTree){\n\t\tthis.children.push(child);\n\t}\n\n\tremoveChild(removeId:string){\n\t\tfor(var i = this.children.length; i>=0;i--){\n\t\t\tif(this.children[i].nodeId === removeId ){\n\t\t\t\tthis.children.splice(i,1);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/abstract-syntax-tree.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StartupComponent } from './startup/startup.component';\nimport { EditorComponent } from './editor/editor.component';\n\nconst routes: Routes = [\n\t{path:'startup', component:StartupComponent },\n\t{path: 'edit/:id', component:EditorComponent},\n\t{path: '', redirectTo:'/startup', pathMatch:'full'}\n]\n\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".title {\\n\\ttext-align: center;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl:\t './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Editor';\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { StartupComponent } from './startup/startup.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { MessageService } from './mockServices/message.service';\nimport { MockAvailableLanguageService } from './mockServices/available-language.service';\nimport { EditorComponent } from './editor/editor.component';\nimport { ProjectsService } from './services/projects.service';\nimport { TreeViewComponent } from './treeView/tree-view.component';\nimport { DefaultNodeEditorComponent } from './default-node-editor/default-node-editor.component';\nimport { DefaultEinputComponent } from './default-node-editor/default-einput/default-einput.component';\nimport { EditService } from './services/edit.service';\nimport { AvailableLanguagesService } from './services/available-languages.service';\nimport { LanguageService } from './services/language.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartupComponent,\n    EditorComponent,\n    TreeViewComponent,\n    DefaultNodeEditorComponent,\n    DefaultEinputComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [\n    MessageService,\n    ProjectsService,\n    MockAvailableLanguageService,\n    EditService,\n    AvailableLanguagesService,\n    LanguageService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input\\n{\\tcolor: black;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.css\n// module id = ../../../../../src/app/default-node-editor/default-einput/default-einput.component.css\n// module chunks = main","module.exports = \"<div [ngSwitch]=\\\"type\\\">\\n\\t<input *ngSwitchCase=\\\"'EString'\\\" [type]=\\\"text\\\" [ngModel]=\\\"val\\\" (ngModelChange)=\\\"test($event)\\\">\\n  <input *ngSwitchCase=\\\"'EInt'\\\" [type]=\\\"number\\\" [ngModel]=\\\"val\\\" (ngModelChange)=\\\"test($event)\\\" >\\n</div> \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.html\n// module id = ../../../../../src/app/default-node-editor/default-einput/default-einput.component.html\n// module chunks = main","import { Component, Input, EventEmitter, Output, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'default-einput',\n  templateUrl: './default-einput.component.html',\n  styleUrls: ['./default-einput.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DefaultEinputComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  \tthis.val = this.initialValue;\n  }\n\n  @Input() type : string;\n  @Input() initialValue: any;\n  @Output() value = new EventEmitter<any>();\n  val : any;\n\n\n  test(val:any){\n  \tconsole.log(this.value);\n  \t//TODO change this so only emits after a period of nothing\n  \tthis.value.emit(val);\n  \tconsole.log(\"yay!\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".default-node-editor{\\n\\tcursor: pointer;\\n\\tpadding-left: 10px;\\n}\\n\\nul li{\\n\\tmargin: 0 0 3px 0;\\n}\\n\\n\\nul li ul li{\\n\\tmargin: 0.2em 0 0.2em 0;\\n\\tlist-style-type: none;\\n}\\n\\n.textbtn{\\n  cursor: pointer;\\n  background: #1d1f2b;\\n  border-radius: 3px;\\n  padding-left:  1em;\\n  padding-right: 1em;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-node-editor.component.css\n// module id = ../../../../../src/app/default-node-editor/default-node-editor.component.css\n// module chunks = main","module.exports = \"<div class=\\\"default-node-editor\\\" *ngIf=\\\"nodeDetails;else noDetails\\\">\\n\\t<div class =\\\"Attributes\\\" *ngIf=\\\"nodeDetails.attributes.length !=0\\\">\\n\\t\\t<h4> Attributes: </h4>\\n\\t\\t<ul>\\n\\t\\t\\t<li *ngFor=\\\"let att of nodeDetails.attributes\\\">\\n\\t\\t\\t\\t{{att.name}} ({{att.type}}) : <default-einput [type]=\\\"att.type\\\" [initialValue]=\\\"att.value\\\" (value)=\\\"AttributeChange(att,$event)\\\" > </default-einput>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\t</div>\\n\\n\\t<div class=\\\"References\\\" *ngIf=\\\"nodeDetails.references.length !=0\\\">\\n\\t\\t<h4> References: </h4>\\n\\t\\t<ul>\\n\\t\\t\\t<li *ngFor=\\\"let ref of nodeDetails.references\\\">\\n\\t\\t\\t\\t{{ref.name}}\\n\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t<li *ngFor=\\\"let refNode of ref.nodes\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"textbtn\\\" (click)=\\\"RemoveReferenceClick(refNode.nodeId,ref)\\\">X</span> {{refNode.name}}  : ({{refNode.nodeId}})\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t<span class=\\\"textbtn\\\" (click)=\\\"AddReferenceClick(ref)\\\">Add {{ref.name}}</span>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\t\\t\\n\\t</div>\\n</div>\\n\\n<ng-template #noDetails>\\n\\tNo nodeDetails\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-node-editor.component.html\n// module id = ../../../../../src/app/default-node-editor/default-node-editor.component.html\n// module chunks = main","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NodeDetails, Attribute, Reference, NodeReference } from '../node-details';\nimport { EditService } from'../services/edit.service';\nimport {FileDetails } from '../file-details';\nimport {AbstractSyntaxTree } from '../abstract-syntax-tree';\n\n@Component({\n  selector: 'default-node-editor',\n  templateUrl: './default-node-editor.component.html',\n  styleUrls: ['./default-node-editor.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DefaultNodeEditorComponent implements OnInit {\n\n  constructor(\n    private editService: EditService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  @Input() projId: string;\n  @Input() fileDetails: FileDetails;\n  @Input() nodeDetails: NodeDetails;\n\n  test(o: any) {\n    console.log(\"edit\" + o);\n  }\n\n  AttributeChange(att: Attribute, value: any): void {\n    console.log(this.fileDetails);\n\n    //What to do here? save?\n    //Locally Validate\n    this.editService.validateAttribute(this.projId, this.fileDetails, this.nodeDetails.nodeId, att.name, value).subscribe(a=>null);\n    this.editService.updateAttribute(this.projId, this.fileDetails, this.nodeDetails.nodeId, att.name, value).subscribe(a=>null);\n  }\n\n\n  AddReferenceClick(ref: Reference): void {\n    console.log(\"Add \" + ref.name);\n    this.editService.addReference(this.projId, this.fileDetails, this.nodeDetails.nodeId, ref.name).subscribe(a=>this.nodeDetails.ast.addChild(a));\n  }\n\n\tRemoveReferenceClick(nodeId: string, ref:Reference) {\n    console.log(\"Remove \" + nodeId);\n    this.editService.removeReference(this.projId, this.fileDetails, this.nodeDetails.nodeId, nodeId, ref.name)\n    .subscribe(a=>{if(a){this.nodeDetails.ast.removeChild(nodeId)}else{console.error(\"Error removing reference\")}});\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/default-node-editor/default-node-editor.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.hidden { \\n  visibility: hidden;\\n }\\n\\n.container {\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n}\\n\\n.title{\\n    width: 100%;\\n    text-align: center;\\n}\\n\\n\\n.middlepane .savefilebtn{\\n  cursor:pointer;\\n  background-color: #eee;\\n  color: black;\\n  border-radius: 3px;\\n  padding-left:  1em;\\n  padding-right: 1em;\\n}\\n\\n.leftpane .newfilebtn{\\n  cursor:pointer;\\n  background-color: #eee;\\n  color: black;\\n  border-radius: 3px;\\n  padding-left:  1em;\\n  padding-right: 1em;\\n}\\n\\n.leftpane ul li{\\n  list-style-type: none;\\n  margin-top: 0.2em;\\n}\\n\\n\\n.leftpane ul li .textbtn{\\n  cursor: pointer;\\n  color: white;\\n  background: #1d1f2b;\\n  border-radius: 3px;\\n  padding-left:  1em;\\n  padding-right: 1em;\\n}\\n\\n.middlepane >tree-view {\\n  background-color: grey;\\n}\\n\\n.leftpane {\\n  width: 14%;\\n  height: 100%;\\n  float: left;\\n}\\n\\n.middlepane {\\n  width: 24%;\\n  height: 100%;\\n  float: left;\\n}\\n\\n.rightpane {\\n  width: 60%;\\n  height: 100%;\\n  position: relative;\\n  float: right;\\n}\\n\\n.rightpane p{\\n  padding-left:15px; \\n}\\n\\n.leftpane,.middlepane,.rightpane{\\n  border-radius: 4px;\\n  background-color: grey;\\n  margin: .3em;\\n  height: 75vh;\\n}\\n\\n.leftpane h3, .middlepane h3, .rightpane h3{\\n  padding-top: 0.2em;\\n  margin-top: 0.2em ;\\n  text-align: center;\\n}\\n\\n.leftpane *, .middlepane *, .rightpane *{\\n    background-color: grey;\\n}\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/editor/editor.component.css\n// module id = ../../../../../src/app/editor/editor.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"project;else notFound\\\"> \\n\\t<h1 class=\\\"title\\\"> Editor : {{project.details.name}} </h1>\\n\\t<div class=\\\"container\\\">\\n\\t  <div class=\\\"leftpane\\\">\\n\\t  \\t<h3>Files</h3>\\n\\t    <ul>\\n\\t      <li *ngFor=\\\"let file of project.files\\\">\\n\\t     \\t\\t<span class=\\\"textbtn\\\" (click)=\\\"loadFile(file)\\\">{{file.name}}</span>\\n\\t      </li>\\n\\t    </ul>\\n\\t    <a class=\\\"newfilebtn\\\" (click)=\\\"newFileClick()\\\"> New File </a>\\n\\t  </div>\\n\\n\\t  <div class=\\\"middlepane\\\">\\n\\t  \\t<h3>Tree</h3>\\n\\t  \\t<div *ngIf=\\\"openFile\\\">\\n\\t\\t   <tree-view [treeRoot]=\\\"openFile.treeRoot\\\" (clickedNode)=\\\"getNodeEditor($event)\\\"></tree-view>\\n\\t\\t   <a class=\\\"savefilebtn\\\" [ngClass]=\\\"{hidden: !valid}\\\" (click)=\\\"saveFileClick()\\\"> Save File </a>\\n\\t\\t  </div>\\n\\t\\t</div>\\n\\n\\t  <div class=\\\"rightpane\\\">\\n\\t    <h3>Edit</h3>\\n\\t    <div *ngIf=\\\"nodeDetails\\\">\\n\\t\\t   <default-node-editor [nodeDetails]=\\\"nodeDetails\\\" [fileDetails]=\\\"openFile.details\\\" [projId]=\\\"project.details.id\\\"></default-node-editor>\\n\\t\\t  </div>\\n\\t  </div>\\n\\t</div>\\n</div>\\n\\n<ng-template #notFound>\\n\\t<h1> Invalid Project ID </h1>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/editor/editor.component.html\n// module id = ../../../../../src/app/editor/editor.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { LanguageSpec } from '../language-spec';\n//import { MockAvailableLanguageService } from '../mockServices/available-language.service';\nimport {LanguageService } from '../services/language.service'\nimport { ProjectsService } from '../services/projects.service';\nimport { Project } from '../project';\nimport { TreeViewComponent } from '../treeView/tree-view.component';\nimport { File} from '../file';\nimport { FileDetails } from '../file-details';\nimport { Attribute, NodeDetails } from '../node-details';\nimport { AbstractSyntaxTree } from '../abstract-syntax-tree';\n\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n\n\tproject : Project;\n  openFile : File; //open file if is one\n  nodeDetails : NodeDetails; //Data about current node, used to draw the nodeEdit\n  valid : boolean; //Is the current file state valid?\n\n  constructor(\n  \tprivate route:ActivatedRoute,\n  \tprivate availableLangService: LanguageService,\n  \tprivate projectService: ProjectsService \n  ) { }\n\n  ngOnInit() {\n\n  \tconst id = this.route.snapshot.paramMap.get('id');\n  \tconsole.log(id);\n    this.projectService.getProject(id).subscribe(prj => this.project = prj);\n    this.valid = true;\n  }\n\n  loadFile(file:FileDetails){\n    //this.openFile = file;\n    console.log(\"Opened \"+ file.name)\n    this.projectService.getFile(this.project.details.id,file).subscribe(a=>this.openFile = a);\n  }\n\n  newFileClick(){\n   var name : string = \"\";\n    console.log(\"test\");\n    while(name == \"\" ){\n      var name = prompt(\"Please enter file name:\");\n      if (name == null) {\n        return //user cancelled the request\n      } else if(this.project.files.find(file => file.getNameWithoutExtension() == name) != null){\n        alert(\"File name already exists\");\n        name = \"\";  \n      }\n      \n    }\n    this.projectService.addFileToProject(this.project.details.id, name).subscribe(fileDetail => this.project.files.push(fileDetail));\n  }\n\n  getNodeEditor(node:AbstractSyntaxTree){\n    this.projectService.getNode(this.project.details.id,this.openFile.details,node).subscribe(a => this.nodeDetails = a);\n  }\n\n  saveFileClick(){\n    this.projectService.saveFile(this.project.details.id,this.openFile.details).subscribe(a=>null);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/editor/editor.component.ts","export class FileDetails{\n\tname: string;\n\t\n\n\tconstructor(name:string){\n\t\tthis.name = name;\n\t}\n\n\tpublic getExtension() : string {\n\t\treturn this.name.substring( this.name.lastIndexOf('.'));\n\t}\n\n\tpublic getNameWithoutExtension(): string{\n\t\treturn this.name.substring(0, this.name.lastIndexOf('.'));\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/file-details.ts","import { AbstractSyntaxTree } from './abstract-syntax-tree';\nimport { FileDetails } from './file-details'\n\nexport class File{\n\ttreeRoot : AbstractSyntaxTree; //The abstract syntax tree which makes up the file\n\tdetails : FileDetails;\n\n\tconstructor(treeRoot: AbstractSyntaxTree, details:FileDetails){\n\t\tthis.treeRoot = treeRoot;\n\t\tthis.details = details;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/file.ts","export class LanguageSpec{\n\tname: string\n\tfileExtension : string\n\n\tconstructor(name: string, ext: string){\n\t\tthis.name = name;\n\t\tthis.fileExtension = ext;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/language-spec.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n\nimport { MessageService } from './message.service';\nimport { LanguageSpec } from '../language-spec';\nimport { LANGUAGESPEC } from './mock-languages';\n\n\n@Injectable()\nexport class MockAvailableLanguageService {\n//sa\n\tconstructor(\n\t\tprivate messageService:MessageService,\n\t\tprivate http:HttpClient\n\t) {};\n\n  getLanguages() : Observable<LanguageSpec> {\n\n  \tthis.messageService.addMessage(\"Available Language Service: Getting available languages\");\n  \treturn of(LANGUAGESPEC)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/mockServices/available-language.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessageService {\n\n\tpublic messages :string[] = [];\n\n\taddMessage(msg: string) : void {\n\t\tthis.messages.push(msg);\n\t}\n\n\tclearMessages() : void{\n\t\tthis.messages = [];\t\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/mockServices/message.service.ts","import {LanguageSpec} from '../language-spec';\n\nexport const LANGUAGESPEC : LanguageSpec = \n\t{name:\"mydsl\", fileExtension:\".mydsl\"}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/mockServices/mock-languages.ts","import {AbstractSyntaxTree} from './abstract-syntax-tree';\n\nexport class Attribute{\n\ttype:string;\n\tname:string;\n\tvalue:string;\n}\n\nexport class Reference{\n\tname:string;\n\tnodes:NodeReference[];\n}\n\nexport class NodeReference{\n\tname:string;\n\tnodeId: string;\n}\n\nexport class NodeDetails{\n\tattributes: Attribute[];\n\treferences: Reference[];\n\tnodeId: string;\n\tast: AbstractSyntaxTree;\n\tconstructor(atts:Attribute[],refs:Reference[],id:string,ast:AbstractSyntaxTree){\n\t\tthis.attributes = atts;\n\t\tthis.references = refs;\n\t\tthis.nodeId = id;\n\t\tthis.ast = ast;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/node-details.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n\nimport { MessageService } from './message.service';\nimport { LanguageSpec } from '../language-spec';\nimport { LANGUAGESPEC } from '../mockServices/mock-languages';\n\n\n@Injectable()\nexport class AvailableLanguagesService {\n\tconstructor(\n\t\tprivate messageService:MessageService,\n\t\tprivate http:HttpClient\n\t) {};\n\n  getLanguages() : Observable<LanguageSpec> {\n\n  \tthis.messageService.addMessage(\"Available Language Service: Getting available languages\");\n  \treturn of(LANGUAGESPEC)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/available-languages.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n\nimport { Observable } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport 'rxjs/add/operator/map';\n\nimport { MessageService } from '../mockServices/message.service';\nimport { ProjectDetails } from '../project-details';\nimport { LanguageSpec } from '../language-spec';\nimport { Project } from '../project';\nimport { FileDetails } from '../file-details';\nimport { File } from '../file';\nimport { AbstractSyntaxTree } from '../abstract-syntax-tree';\nimport { NodeDetails } from '../node-details';\nimport { ValidNodeResponse, ValidNodeRawResponse  } from './responses/valid-node-response';\nimport { UpdateNodeResponse, UpdateNodeRawResponse  } from './responses/update-node-response';\nimport { AddReferenceRawResponse, AddReferenceResponse } from './responses/add-reference-response';\nimport { RemoveReferenceRawResponse, RemoveReferenceResponse } from './responses/remove-reference-response';\n\n\n@Injectable()\nexport class EditService {\n\n  constructor(\n    private messageService : MessageService,\n    private http : HttpClient\n    ) { }\n\n\n  private readonly serviceUrl : string = `/pe-service`;\n\n  getFile(projId:string, fileDetails:FileDetails): Observable<File>{\n    var a = this.http.get(this.serviceUrl,\n      {params: new HttpParams().append('serviceType','get-file').append('file-name', fileDetails.name).append('project-name',projId)})\n      .map(a=> new File(new AbstractSyntaxTree(a[\"ast\"]), fileDetails));\n    return a;\n  }\n\n  validateAttribute(projId:string, fileDetails:FileDetails, nodeId:string, attributeName:string, newValue:any) : Observable<ValidNodeResponse>{\n  \treturn this.http.get<ValidNodeRawResponse>(this.serviceUrl,\n      {params: new HttpParams()\n      \t.append('serviceType','validate-node')\n      \t.append('file-name', fileDetails.name)\n      \t.append('project-name',projId)\n      \t.append('node-id',nodeId)\n        .append('attribute-name',attributeName)\n        .append('value',newValue)\n      }).map( a => new ValidNodeResponse(a));\n  }\n\n  updateAttribute(projId: string, fileDetails: FileDetails, nodeId: string, attributeName: string, newValue: any): Observable<UpdateNodeResponse> {\n    //TODO change to post\n    return this.http.get<UpdateNodeRawResponse>(this.serviceUrl,\n      {\n        params: new HttpParams()\n          .append('serviceType', 'update-node')\n          .append('file-name', fileDetails.name)\n          .append('project-name', projId)\n          .append('node-id', nodeId)\n          .append('attribute-name', attributeName)\n          .append('value', newValue)\n      }).map(a => new UpdateNodeResponse(a));\n  }\n\n  addReference(projId: string, fileDetails: FileDetails, nodeId: string, referenceName: string): Observable<AbstractSyntaxTree> {\n\n    return this.http.get<AddReferenceRawResponse>(this.serviceUrl,\n      {\n        params: new HttpParams()\n          .append('serviceType', 'add-reference')\n          .append('file-name', fileDetails.name)\n          .append('project-name', projId)\n          .append('node-id', nodeId)\n          .append('reference-name', referenceName)\n      }).map(a => new AddReferenceResponse(a).getAst()); \n  }\n\n  removeReference(projId: string, fileDetails: FileDetails, nodeId: string, toRemoveId: string, referenceName:string): Observable<boolean> {\n\n    return this.http.get<RemoveReferenceRawResponse>(this.serviceUrl,\n      {\n        params: new HttpParams()\n          .append('serviceType', 'remove-reference')\n          .append('file-name', fileDetails.name)\n          .append('project-name', projId)\n          .append('node-id', nodeId)\n          .append('reference-id', toRemoveId)\n          .append('reference-name', referenceName)\n      }).map(a => new RemoveReferenceResponse(a).getSuccess()); \n  }\n\n/*\n  validateNode(projId:string, fileDetails:FileDetails, nodeId:string) : Observable<ValidNodeResponse>{\n    return this.http.get<ValidNodeRawResponse>(this.serviceUrl,\n      {params: new HttpParams()\n        .append('serviceType','valid-node')\n        .append('file-name', fileDetails.getFullName())\n        .append('project-name',projId)\n        .append('node-id',nodeId)\n      }).map( a => new ValidNodeResponse(a));\n  }*/\n\n\n  /*\n  TO WRITE:\n\n  validateNode(projID, nodeID, fileDetails)\n\tSaveFile(fileDetails, projID)\n\n\n\t*/\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/edit.service.ts","\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n\nimport { MessageService } from '..//mockServices/message.service';\nimport { LanguageSpec } from '../language-spec';\nimport { GetLanguageRawResponse } from './responses/get-language-response';\n\n\n@Injectable()\nexport class LanguageService {\n\t\n\tconstructor(\n\t\tprivate messageService:MessageService,\n\t\tprivate http:HttpClient\n\t) {};\n\n\tprivate readonly serviceUrl : string = `/pe-service`;\n\n  getLanguages() : Observable<LanguageSpec[]> {\n\n  \tthis.messageService.addMessage(\"Available Language Service: Getting available languages\");\n\t  return this.http.get<GetLanguageRawResponse>(this.serviceUrl,\n      {params: new HttpParams()\n      \t.append('serviceType','ls-languages')\n      }).map(a => {console.log(  a.languages);\n      \t\tconsole.log(a.languages[0].Name);\n      \t\treturn [new LanguageSpec(a.languages[0].Name,a.languages[0].FileExtension)]});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/language.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessageService {\n\n\tpublic messages :string[] = [];\n\n\taddMessage(msg: string) : void {\n\t\tthis.messages.push(msg);\n\t}\n\n\tclearMessages() : void{\n\t\tthis.messages = [];\t\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/message.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n\nimport { Observable } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport 'rxjs/add/operator/map';\n\nimport { MessageService } from '../mockServices/message.service';\nimport { ProjectDetails } from '../project-details';\nimport { LanguageSpec } from '../language-spec';\nimport { Project } from '../project';\nimport { FileDetails } from '../file-details';\nimport { File } from '../file';\nimport { AbstractSyntaxTree } from '../abstract-syntax-tree';\nimport { NodeDetails } from '../node-details';\nimport { GetNodeResponse, GetNodeRawResponse } from './responses/get-node-response';\nimport { SaveFileResponse, SaveFileRawResponse } from './responses/save-file-response';\n\n@Injectable()\nexport class ProjectsService {\n\n  constructor(\n    private messageService : MessageService,\n    private http : HttpClient\n    ) { }\n\n  private readonly serviceUrl : string = `/pe-service`;\n  \n  getProjectDetails(): Observable<ProjectDetails[]> {\n  \tthis.log(\"getting project details\");\n  \treturn this.http.get(this.serviceUrl, \n      {params: new HttpParams().append('serviceType','ls-projects')})\n      .map( res => <String[]>(res[\"projectnames\"])).map(a =>a.map(this.stringToProjectDetails));\n  }\n\n  private stringToProjectDetails(s:string ) : ProjectDetails{\n    return {id:s, name: s}\n  }\n\n  addNewProject(name: string) : Observable<string>{\n  \tvar b : Observable<string> = this.http.get(this.serviceUrl,\n      {params: new HttpParams().append('serviceType', 'add-project').append('name',name)}).map(a=>name);\n    return b;\n  }\n\n  getProject(id:string) : Observable<Project>{    \n    this.log(\"retrieving project id: \" + id);\n    var b : Observable<Project> = this.http.get(this.serviceUrl,\n      {params: new HttpParams().append('serviceType', 'get-project').append('name',id)})\n      .map(a=> a[\"Files\"])\n      .map<string[],Project>(ls => {var files = ls.map(a=> new FileDetails(a)); return {details:{name:id,id:id},files:files}});\n    return b;\n  }\n\n  getFile(projId:string, fileDetails:FileDetails): Observable<File>{\n    \n    var a = this.http.get(this.serviceUrl,\n      {params: new HttpParams().append('serviceType','get-file').append('file-name', fileDetails.name).append('project-name',projId)})\n      .map(a=> new File(new AbstractSyntaxTree(a[\"ast\"]), fileDetails));\n    return a;\n  }\n\n\n  //TODO refactor out into separate service? \n  //TODO Modify service so it returns something other than default node response\n  getNode(projId: string, fileDetails:FileDetails, node:AbstractSyntaxTree): Observable<NodeDetails>{\n    return this.http.get<GetNodeRawResponse>(this.serviceUrl,\n      {params: new HttpParams().append('serviceType','get-node')\n      .append('file-name', fileDetails.name)\n      .append('project-name',projId)\n      .append('node-id',node.nodeId)})\n      .map(a => new GetNodeResponse(a).getNodeDetails(node));\n     \n  }\n\n  addFileToProject(projId:string , fileName:string) : Observable<FileDetails>{\n    this.log(\"adding file \"+ fileName + \"to project \" + projId);\n    \n    var b : Observable<FileDetails> = this.http.get(this.serviceUrl,\n      {params: new HttpParams().append('serviceType', 'add-file')\n      .append('name',fileName)\n      .append('project-name',projId)})\n      .map(a => new FileDetails(a[\"name\"]));\n    return b;\n  }\n\n  saveFile(projId:string , fileDetails:FileDetails) : Observable<SaveFileResponse>{\n    this.log(\"saving file \"+ fileDetails.name + \" to project \" + projId);\n    \n    return this.http.get<SaveFileRawResponse>(this.serviceUrl,\n      {params: new HttpParams().append('serviceType', 'save-file')\n      .append('file-name',fileDetails.name)\n      .append('project-name',projId)})\n      .map(a => new SaveFileResponse(a));\n  }\n  \n  private log(message:string):void{\n    this.messageService.addMessage(\"Projects Service: \" + message);\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/projects.service.ts","import { AbstractSyntaxTree } from '../../abstract-syntax-tree';\n\nexport class AddReferenceRawResponse{\n\tast: AbstractSyntaxTree;\n}\n\nexport class AddReferenceResponse{\n\n\trawResponse: AddReferenceRawResponse;\n\tannotatedAst: AbstractSyntaxTree;\n\n\tconstructor(rawResponse:AddReferenceRawResponse){\n\t\tthis.rawResponse = rawResponse;\n\t\tthis.annotatedAst = new AbstractSyntaxTree(this.rawResponse.ast);\n\t}\n\n\tgetAst():AbstractSyntaxTree {\n\t\treturn this.annotatedAst;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/add-reference-response.ts","import{Attribute,Reference} from '../../node-details';\nimport {AbstractSyntaxTree} from '../../abstract-syntax-tree';\nimport {NodeDetails} from '../../node-details';\n\nexport class GetNodeRawResponse{\n\tattributes: Attribute[];\n\treferences: Reference[];\n\tnodeId: string;\n}\n\nexport class GetNodeResponse{\n\trawResponse : GetNodeRawResponse;\n\tconstructor(rawResponse:GetNodeRawResponse){\n\t\tthis.rawResponse = rawResponse;\n\t}\t\n\n\tgetNodeDetails(ast:AbstractSyntaxTree){\n\t\treturn new NodeDetails(this.rawResponse.attributes,this.rawResponse.references,this.rawResponse.nodeId,ast);\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/get-node-response.ts","import { AbstractSyntaxTree } from '../../abstract-syntax-tree';\n\nexport class RemoveReferenceRawResponse{\n\tsuccess: boolean;\n}\n\nexport class RemoveReferenceResponse{\n\n\trawResponse: RemoveReferenceRawResponse;\n\n\tconstructor(rawResponse:RemoveReferenceRawResponse){\n\t\tthis.rawResponse = rawResponse;\n\t}\n\n\tgetSuccess(): boolean{ \n\t\treturn this.rawResponse.success\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/remove-reference-response.ts","export class SaveFileRawResponse{\n  success: boolean;\n  message : string;\n}\n\nexport class SaveFileResponse{\n  rawResponse: SaveFileRawResponse;\n\n  constructor(rawResponse:SaveFileRawResponse){\n    this.rawResponse = rawResponse;\n  }\n\n  getSuccess(): boolean{\n    return this.rawResponse.success;\n  }\n\n  getMessage():string{\n    return this.rawResponse.message;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/save-file-response.ts","export class UpdateNodeRawResponse{\n  success: boolean;\n  message : string;\n}\n\nexport class UpdateNodeResponse{\n  rawResponse: UpdateNodeRawResponse;\n\n  constructor(rawResponse:UpdateNodeRawResponse){\n    this.rawResponse = rawResponse;\n  }\n\n  getSuccess(): boolean{\n    return this.rawResponse.success;\n  }\n\n  getMessage():string{\n    return this.rawResponse.message;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/update-node-response.ts","export class ValidNodeRawResponse{\n\tvalid: boolean;\n\tmessage : string;\n}\n\nexport class ValidNodeResponse{\n\trawResponse: ValidNodeRawResponse;\n\n\tconstructor(rawResponse:ValidNodeRawResponse){\n\t\tthis.rawResponse = rawResponse;\n\t}\n\n\tgetValid(): boolean{\n\t\treturn this.rawResponse.valid;\n\t}\n\n\tgetMessage():string{\n\t\treturn this.rawResponse.message;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/services/responses/valid-node-response.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".title {\\n\\ttext-align: center;\\n\\t\\n}\\n\\n.startup { \\n\\ttext-align: center;\\n\\twidth: 30%;\\n\\tmargin: auto;\\n}\\n\\n.startup li{\\n\\tcursor: pointer;\\n\\tborder-radius: 4px;\\n\\tbackground-color: #eee;\\n\\tmargin: .5em;\\n\\tpadding: 0.6em 0;\\n\\twidth: auto;\\n\\tlist-style-type: none;\\n}\\n\\n.startup li a{\\n\\tcolor: black;\\n\\tbackground-color: #eee;\\n\\ttext-decoration: none;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/startup/startup.component.css\n// module id = ../../../../../src/app/startup/startup.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"title\\\"> Projectional Editor </h1>\\n<div class=\\\"startup\\\">\\n\\t<h2> Create New Project </h2>\\n\\t<li *ngFor=\\\"let lang of availableLanguages\\\">\\n\\t\\t<a class=\\\"newProjectButton\\\" (click)=\\\"newProjectClick()\\\">Create new {{lang.name}} Project </a>\\n\\t</li>\\n\\t<h2> Open Existing Project </h2>\\n\\t<li *ngFor=\\\"let proj of existingProjects\\\">\\n\\t\\t<a class=\\\"existingProjectButton\\\" routerLink=\\\"/edit/{{proj.id}}\\\"> Open {{proj.name}}</a>\\n\\t</li>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/startup/startup.component.html\n// module id = ../../../../../src/app/startup/startup.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { LanguageSpec } from '../language-spec';\n//import { MockAvailableLanguageService } from '../mockServices/available-language.service';\nimport { LanguageService } from '../services/language.service';\nimport { ProjectDetails } from '../project-details';\nimport { Router } from '@angular/router';\nimport { ProjectsService} from '../services/projects.service';\n\n@Component({\n  selector: 'app-startup',\n  templateUrl: './startup.component.html',\n  styleUrls: ['./startup.component.css']\n})\n\nexport class StartupComponent implements OnInit {\n  constructor( \n    private availableLangService : LanguageService,\n    private projectsService : ProjectsService,\n    private router : Router\n  ) { }\n\n  availableLanguages : LanguageSpec[] = [];\n  existingProjects : ProjectDetails[];\n\n  ngOnInit() {\n  \tthis.getAvailableLanguages();\n    this.getExistingProjects();\n  }\n\n  getExistingProjects(): void{\n    this.projectsService.getProjectDetails().subscribe(projects => this.existingProjects = projects);\n    console.log(\"test\");\n  }\n\n  getAvailableLanguages() :void {\n  \tthis.availableLangService.getLanguages().subscribe(langs => {this.availableLanguages = langs});\n  }\n\n  newProjectClick(){\n    //this.projectsService.test();\n    var name : string = \"\";\n    \n    while(name == \"\" ){\n      var name = prompt(\"Please enter your project name:\");\n      if (name == null) {\n        return //user cancelled the request\n      } else if(this.existingProjects.find(project => project.name == name) != null){\n        alert(\"Name already exists\");\n        name = \"\";  \n      }\n      \n    }\n    var id = this.projectsService.addNewProject(name);\n    id.subscribe(id => this.router.navigate(['edit/' + id]));\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/startup/startup.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".treeView ul li{\\n\\tlist-style-type: none;\\n\\tmargin-top:0;\\n\\tcursor: pointer;\\n}\\n.treeView ul{\\n\\tmargin-top:0;\\n\\tpadding-left: 10px;\\n}\\n\\n.treeView{\\n\\tcursor: pointer;\\n\\tpadding-left: 10px;\\n}\\n\\n.toggleIcon{\\n\\tcursor: pointer;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/treeView/tree-view.component.css\n// module id = ../../../../../src/app/treeView/tree-view.component.css\n// module chunks = main","module.exports = \"<div class=\\\"treeView\\\" *ngIf=\\\"treeRoot;else notFound\\\">\\n\\t<span class=\\\"toggleIcon\\\" (click)=\\\"treeRoot.toggle()\\\">{{treeRoot.getToggleIcon()}}</span>\\n\\t<span class=\\\"data\\\" (click)=\\\"onClick()\\\">{{treeRoot.name}}</span>\\n\\t    <ul *ngIf=\\\"treeRoot.expanded\\\">\\n\\t      <li *ngFor=\\\"let child of treeRoot.children\\\">\\n\\t        <tree-view [treeRoot]=\\\"child\\\" (clickedNode)=\\\"passUpClickedNode($event)\\\"></tree-view>\\n\\t      </li>\\n\\t    </ul>\\n</div>\\n\\n<ng-template #notFound>\\n\\tNo nodes yet!\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/treeView/tree-view.component.html\n// module id = ../../../../../src/app/treeView/tree-view.component.html\n// module chunks = main","import { Component,EventEmitter, Input, Output, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AbstractSyntaxTree } from '../abstract-syntax-tree';\n\n@Component({\n  selector: 'tree-view',\n  templateUrl: './tree-view.component.html',\n  styleUrls: ['./tree-view.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TreeViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Output() clickedNode = new EventEmitter<AbstractSyntaxTree>();\n\n  @Input() treeRoot:AbstractSyntaxTree;\n\n  onClick(){\n  \tthis.clickedNode.emit(this.treeRoot);\n  }\n\n  //if a child is clicked we need to pass up it's clickedNode output as editor is only subscribed to root\n  passUpClickedNode(ast:AbstractSyntaxTree){\n  \tthis.clickedNode.emit(ast);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/app/treeView/tree-view.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Univ/Project/git/frontend-proto/angular-web-ide/src/main.ts"],"sourceRoot":"webpack:///"}