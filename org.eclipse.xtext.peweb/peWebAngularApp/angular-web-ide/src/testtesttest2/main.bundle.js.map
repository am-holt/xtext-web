{"version":3,"sources":["/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/$_lazy_route_resource lazy","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/abstract-syntax-tree.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/app-routing.module.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/app.component.css","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/app.component.html","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/app.component.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/app.module.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/attribute-id.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/custom-node-editor/custom-node-editor.component.css","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/custom-node-editor/custom-node-editor.component.html","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/custom-node-editor/custom-node-editor.component.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/custom-view-descriptor.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.css","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.html","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-node-editor.component.css","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-node-editor.component.html","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-node-editor.component.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-view-descriptor.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/editor/editor.component.css","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/editor/editor.component.html","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/editor/editor.component.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/file-details.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/file.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/language-spec.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/mockServices/available-language.service.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/mockServices/message.service.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/mockServices/mock-languages.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/mockServices/mock-node-details.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/safe-html.pipe.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/available-languages.service.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/edit.service.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/language.service.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/message.service.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/projects.service.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/responses/add-reference-response.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/responses/remove-reference-response.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/responses/save-file-response.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/responses/update-node-response.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/responses/valid-node-response.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/startup/startup.component.css","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/startup/startup.component.html","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/startup/startup.component.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/treeView/tree-view.component.css","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/treeView/tree-view.component.html","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/treeView/tree-view.component.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/environments/environment.ts","/home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","export class AbstractSyntaxTree{\n\n\t//Used to display as part of tree-view component\n\texpanded = false;\n\n\tname: string;\n\tnodeId: string;\n\tchildren: AbstractSyntaxTree[]; //Children of the tree\n\n\t//Used so the automatic deserialisation can be given methods\n\tconstructor(ast:AbstractSyntaxTree){\n\t\tthis.name = ast.name;\n\t\tthis.nodeId = ast.nodeId;\n\t\tthis.children = [];\n\t\tfor (var c of ast.children){\n\t\t\tthis.children.push(new AbstractSyntaxTree(c));\n\t\t}\n\t}\n\n\ttoggle(): void {\n\t\tthis.expanded = !this.expanded;\n\t}\n\n\tgetToggleIcon() : string{\n\t\tif(this.children == null || this.children.length==0){\n\t\t\treturn ' ';\n\t\t}\n\t\telse if(this.expanded){\n\t\t\treturn '-';\n\t\t}else{\n\t\t\treturn '+';\n\t\t}\n\t}\n\n\tfindChild(findId:string){\n\t\tvar ast = null;\n\t\tif(this.nodeId == findId){\n\t\t\treturn this;\n\t\t}else{\n\t\t\tfor(var child of this.children){\n\t\t\t\tvar childResult = child.findChild(findId);\n\t\t\t\tif(childResult !=null){\n\t\t\t\t\treturn childResult;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\taddChild(child: AbstractSyntaxTree, addId?:string,){\n\t\tvar toModify = this;\n\t\tif(addId != null){\n\t\t\ttoModify = this.findChild(addId);\n\t\t\tif(toModify == null){\n\t\t\t\tthrow new Error(\"Couldn't find a node with Id \" + addId);\n\t\t\t}\n\t\t}\n\t\ttoModify.children.push(child);\n\t}\n\n\tremoveChild(removeId:string, rootId?:string){\n\t\tvar toModify = this;\n\t\tif(rootId != null){\n\t\t\ttoModify = this.findChild(rootId);\n\t\t\tif(toModify == null){\n\t\t\t\tthrow new Error(\"Couldn't find a node with Id \" + rootId);\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"remove, len:\" + this.children.length);\n\t\tfor(var i = this.children.length -1; i>=0;i--){\n\t\t\tif(this.children[i].nodeId === removeId ){\n\t\t\t\tthis.children.splice(i,1);\n\t\t\t\tconsole.log(this.children.length);\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate(ast: AbstractSyntaxTree){\n\t\tthis.name = ast.name;\n\t\tthis.nodeId = ast.nodeId;\n\t\tthis.children = ast.children;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/abstract-syntax-tree.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StartupComponent } from './startup/startup.component';\nimport { EditorComponent } from './editor/editor.component';\n\nconst routes: Routes = [\n\t{path:'startup', component:StartupComponent },\n\t{path: 'edit/:id', component:EditorComponent},\n\t{path: '', redirectTo:'/startup', pathMatch:'full'}\n]\n\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".title {\\n\\ttext-align: center;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl:\t './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Editor';\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { StartupComponent } from './startup/startup.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { MessageService } from './mockServices/message.service';\nimport { MockAvailableLanguageService } from './mockServices/available-language.service';\nimport { EditorComponent } from './editor/editor.component';\nimport { ProjectsService } from './services/projects.service';\nimport { TreeViewComponent } from './treeView/tree-view.component';\nimport { DefaultNodeEditorComponent } from './default-node-editor/default-node-editor.component';\nimport { DefaultEinputComponent } from './default-node-editor/default-einput/default-einput.component';\nimport { EditService } from './services/edit.service';\nimport { AvailableLanguagesService } from './services/available-languages.service';\nimport { LanguageService } from './services/language.service';\nimport { CustomNodeEditorComponent } from './custom-node-editor/custom-node-editor.component';\nimport { SafeHtmlPipe } from './safe-html.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartupComponent,\n    EditorComponent,\n    TreeViewComponent,\n    DefaultNodeEditorComponent,\n    DefaultEinputComponent,\n    CustomNodeEditorComponent,\n    SafeHtmlPipe,\n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [\n    MessageService,\n    ProjectsService,\n    MockAvailableLanguageService,\n    EditService,\n    AvailableLanguagesService,\n    LanguageService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/app.module.ts","import {AttributeController} from './custom-view-descriptor';\n\nexport class AttributeId{\n\t\n\t//Id of the node the attribute is referencing\n\tnodeId: string;\n\n\t//Name of the attribute\n\tname: string\n\n\tconstructor(ac: AttributeController){\n\t\tthis.nodeId = ac.nodeId;\n\t\tthis.name = ac.attributeName;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/attribute-id.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".removeBtn{\\n  cursor: pointer;\\n  background: #d12e0e;\\n\\tborder-radius: 15px;\\n\\tpadding-left: 0.3em;\\n\\tpadding-right: 0.3em;\\n\\tborder: 0;\\n\\tborder-color: transparent;\\n}\\n\\ninput{\\n\\tcolor: black;\\n}\\n\\nselect{\\n  cursor: pointer;\\n  background: #1d1f2b;\\n  border-radius: 3px;\\n}\\n\\nbutton{\\n  cursor: pointer;\\n  background: #1d1f2b;\\n  border-radius: 3px;\\n  padding-left:  1em;\\n  padding-right: 1em;\\n}\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/custom-node-editor/custom-node-editor.component.css\n// module id = ../../../../../src/app/custom-node-editor/custom-node-editor.component.css\n// module chunks = main","module.exports = \"\\n<!-- <button (click)=\\\"test()\\\">test</button> -->\\n<div [innerHtml]=\\\"nodeViewDescriptor.htmlView | safeHtml\\\"></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/custom-node-editor/custom-node-editor.component.html\n// module id = ../../../../../src/app/custom-node-editor/custom-node-editor.component.html\n// module chunks = main","import { Component, EventEmitter, Input, Output, OnInit, OnChanges, AfterViewChecked, ViewEncapsulation } from '@angular/core';\n\nimport { EditService } from'../services/edit.service';\nimport { FileDetails } from '../file-details';\nimport { AbstractSyntaxTree } from '../abstract-syntax-tree';\nimport { Observable } from 'rxjs/Rx';\nimport { CustomViewDescriptor } from '../custom-view-descriptor';\nimport {AttributeId} from '../attribute-id';\n\n\n@Component({\n  selector: 'custom-node-editor',\n  templateUrl: './custom-node-editor.component.html',\n  styleUrls: ['./custom-node-editor.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CustomNodeEditorComponent implements OnInit {\n\n\tprivate timer;\n\tprivate readonly pollDelay = 500;\n\tprivate readonly pollTime = 5000;\n  private readonly attributeValueMap = new Map();\n  private setVal = true;\n\n\n\n  constructor(\n    private editService: EditService\n  ) { }\n\n  ngOnInit() {\n  \t//console.log(\"OnInit\")\n  }\n\n  ngOnChanges(){\n    this.setVal = true;\n    //console.log(\"setVal tru\");\n  }\n\n  ngAfterViewChecked(){\n    //console.log(\"afterViewChecked\")\n\n    if(this.setVal){\n      //Initialise attribute caches and set them to initial values\n      //console.log(\"setVal\");\n      this.initAttributes();\n      this.initReferences();\n      this.setVal = false;  \n    }\n    \n  }\n\n  ngAfterViewInit() {\n  \t//console.log(\"afterViewInit\" );\n    //Set up a timer to regularly poll attributes for changes\n    this.timer = Observable.timer(this.pollDelay,this.pollTime)\n    this.timer.subscribe((t) => this.onGetPoll());    \n  }\n\n  @Input() projId: string;\n  @Input() fileDetails: FileDetails;\n  @Input() nodeViewDescriptor: CustomViewDescriptor;\n  @Input() nodeAST : AbstractSyntaxTree;\n  @Output() refresh = new EventEmitter<Boolean>();; \n\n  onGetPoll(){\n    console.log(\"OnGetPoll\")\n    var changedValues : AttributeId[] = [];\n\n  \tfor( var attribute of this.nodeViewDescriptor.attributeControllers){\n      var currentValue = eval(attribute.getter);\n      if( currentValue !== this.attributeValueMap.get(attribute.nodeId).get(attribute.attributeName)){\n        var valid = eval(\"(X=>{\"+attribute.validator+\"})\")(currentValue);\n        console.log(\"Validation:\");\n        console.log(valid);\n        changedValues.push(new AttributeId(attribute));\n        this.attributeValueMap.get(attribute.nodeId).set(attribute.attributeName, currentValue);\n        console.log(\"VALUE CHANGED: \" + attribute.attributeName + \" VAL: \" + currentValue)\n        this.editService.updateAttribute(this.projId,this.fileDetails,attribute.nodeId,attribute.attributeName,currentValue).subscribe();\n      }\n  \t}\n  }\n\n  initReferences(){\n    for(var reference of this.nodeViewDescriptor.referenceControllers){\n      var addSelector = document.getElementById(reference.addSelectorId);\n      if(addSelector != null){\n        addSelector.addEventListener(\"change\",this.addReference(reference.nodeId,reference.referenceName,reference.crossReference));    \n      }\n      \n      \n      for(var referenceItem of reference.references){\n        var referenceRemoveBtn = document.getElementById(referenceItem.removeButtonId);\n        if(referenceRemoveBtn != null){\n          referenceRemoveBtn.addEventListener(\"click\",this.removeReference(reference.nodeId,reference.referenceName , referenceItem.nodeId,referenceItem.divId));  \n        }\n      }\n    }\n  }\n\n  initAttributes() {\n    for(var attribute of this.nodeViewDescriptor.attributeControllers){\n\n      //Set the attributeValue cache with the initial values\n      if(!this.attributeValueMap.has(attribute.nodeId)){\n        this.attributeValueMap.set(attribute.nodeId, new Map());\n      }\n      this.attributeValueMap.get(attribute.nodeId).set(attribute.attributeName,attribute.initialValue);\n\n      //Set the attribute value in the view\n      eval(\"(X=>{\"+attribute.setter+\"})\")(attribute.initialValue);\n    }\n  }\n\n  addReference(nodeId:string, referenceName:string, crossRef:boolean ) : EventListener {\n    var editService = this.editService;\n    var projId = this.projId;\n    var fileDetails = this.fileDetails;\n    var nodeAST = this.nodeAST;\n    var refresh = this.refresh;\n    \n    if(crossRef){\n      return function(event){\n      editService.addCrossReference(projId,fileDetails,nodeId,referenceName,(event.target as HTMLSelectElement).value).subscribe(a=>{refresh.emit(true);})\n    }\n    }else{\n      return function(event){\n      editService.addReference(projId,fileDetails,nodeId,referenceName,(event.target as HTMLSelectElement).value).subscribe(a=>{nodeAST.addChild(a,nodeId);refresh.emit(true);})\n    }\n    }\n  }\n\n  removeReference(nodeId:string, referenceName:string, childId:string,  divId:string ): EventListener {\n    var editService = this.editService;\n    var projId = this.projId;\n    var fileDetails = this.fileDetails;\n    var nodeAST = this.nodeAST;\n    var refresh = this.refresh;\n\n    return function(){\n      editService.removeReference(projId,fileDetails,nodeId,childId,referenceName).subscribe(a=>{nodeAST.removeChild(childId,nodeId);refresh.emit(true);}); \n    }\n  }\n\n  test() {\n  \t//console.log(\"(X=>{\"+this.nodeDetails.view.attributesView[0].setter+\"})(\\\"\"+ this.nodeDetails.attributes[0].value + \"\\\")\" );\n  \t//eval(\"(X=>{\"+this.nodeDetails.view.attributesView[0].setter+\"})(\\\"\"+ this.nodeDetails.attributes[0].value + \"\\\")\" );\n\n    console.log(\"HI\")\n\n    console.log(\"BYE\")\n  }\n\n\n\n  //TODO Display custom code\n\n\n/*  AttributeChange(att: Attribute, value: any): void {\n    console.log(this.fileDetails);\n\n    //What to do here? save?\n    //Locally Validate\n    this.editService.validateAttribute(this.projId, this.fileDetails, this.nodeDetails.nodeId, att.name, value).subscribe(a=>null);\n    this.editService.updateAttribute(this.projId, this.fileDetails, this.nodeDetails.nodeId, att.name, value).subscribe(a=>null);\n  }\n\n\n  AddReferenceClick(ref: Reference): void {\n    console.log(\"Add \" + ref.name);\n    this.editService.addReference(this.projId, this.fileDetails, this.nodeDetails.nodeId, ref.name).subscribe(a=>this.nodeDetails.ast.addChild(a));\n  }\n\n\tRemoveReferenceClick(nodeId: string, ref:Reference) {\n    console.log(\"Remove \" + nodeId);\n    this.editService.removeReference(this.projId, this.fileDetails, this.nodeDetails.nodeId, nodeId, ref.name)\n    .subscribe(a=>{if(a){this.nodeDetails.ast.removeChild(nodeId)}else{console.error(\"Error removing reference\")}});\n\n\t}*/\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/custom-node-editor/custom-node-editor.component.ts","import { ViewDescriptor } from './view-descriptor';\nimport { AttributeId} from './attribute-id';\nimport { NodeReference } from './node-reference';\n\nexport class AttributeController{\n\t\n\t//The name of the attribute this refers to\n\tattributeName: string;\n\n\t//The id of the node this attribute refers to\n\tnodeId:string;\n\n\t//A javascript method to describe how to get the value for the attribute from the view\n\tgetter:string;\n\n\t//A javascript method to describe how to set the value for the attribute in the view\n\tsetter:string;\n\n\t//The initial value of the attribute\n\tinitialValue:any;\n\n\t//A javascript method to describe how to check a value is valid, may have side effects such as painting things red etc.\n\tvalidator:string;\n}\n\nexport class ReferenceController{\n\t//The id of the node the reference belongs to\n\tnodeId: string;\n\n\t//The name of the reference feature this controller is for\n\treferenceName:string;\n\n\t//The id of the button used to add another reference\n\taddSelectorId: string;\n\n\t//The types possible to create here\n\tpossibleTypes: string[];\n\n\t//Whether or not this reference represents a crossReference\n\tcrossReference :boolean;\n\n\t//The possible nodes this reference could cross reference\n\tpossibleCrossReferences : NodeReference[];\n\n\t//An array of the referenced nodes contained in this reference feature\n\treferences: ReferenceItemController[];\n\n}\n\nexport class ReferenceItemController{\n\t//The id of the node being referenced;\n\tnodeId: string;\n\n\t//The id of the button used to remove the item;\n\tremoveButtonId: string;\n\n\t//The identifier of the div that the referenced node is contained within\n\tdivId: string;\n}\n\nexport class CustomViewDescriptor  implements ViewDescriptor{\n\n\tstatic readonly CUSTOM_TYPE = \"custom\"\n\n\t//The type of the viewDescriptor\n\ttype:string;\n\n\t//The html to display to the user\n\thtmlView : string;\n\n\t//Descibes how to get and set the attributes in the view\n\tattributeControllers : AttributeController[];\n\n\t//Describes how to add and remove references in the view\n\treferenceControllers : ReferenceController[];\n\n\tconstructor(htmlView:string, attributes:AttributeController[], references:ReferenceController[]){\n\t\tthis.type = \"custom\";\n\t\tthis.htmlView = htmlView;\n\t\tthis.attributeControllers = attributes;\n\t\tthis.referenceControllers = references;\n\t}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/custom-view-descriptor.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input\\n{\\tcolor: black;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.css\n// module id = ../../../../../src/app/default-node-editor/default-einput/default-einput.component.css\n// module chunks = main","module.exports = \"<div [ngSwitch]=\\\"type\\\">\\n\\t<input *ngSwitchCase=\\\"'EString'\\\" [type]=\\\"text\\\" [ngModel]=\\\"val\\\" (ngModelChange)=\\\"test($event)\\\">\\n  <input *ngSwitchCase=\\\"'EInt'\\\" [type]=\\\"number\\\" [ngModel]=\\\"val\\\" (ngModelChange)=\\\"test($event)\\\" >\\n</div> \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.html\n// module id = ../../../../../src/app/default-node-editor/default-einput/default-einput.component.html\n// module chunks = main","import { Component, Input, EventEmitter, Output, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'default-einput',\n  templateUrl: './default-einput.component.html',\n  styleUrls: ['./default-einput.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DefaultEinputComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  \tthis.val = this.initialValue;\n  }\n\n  @Input() type : string;\n  @Input() initialValue: any;\n  @Output() value = new EventEmitter<any>();\n  val : any;\n\n\n  test(val:any){\n  \tconsole.log(this.value);\n  \t//TODO change this so only emits after a period of nothing\n  \tthis.value.emit(val);\n  \tconsole.log(\"yay!\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-einput/default-einput.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".default-node-editor{\\n\\tcursor: pointer;\\n\\tpadding-left: 10px;\\n}\\n\\n.removeBtn{\\n  cursor: pointer;\\n  background: #d12e0e;\\n\\tborder-radius: 15px;\\n\\tpadding-left: 0.3em;\\n\\tpadding-right: 0.3em;\\n\\tborder: 0;\\n\\tborder-color: transparent;\\n}\\n\\nul li{\\n\\tmargin: 0 0 3px 0;\\n}\\n\\n\\nul li ul li{\\n\\tmargin: 0.2em 0 0.2em 0;\\n\\tlist-style-type: none;\\n}\\n\\n.textbtn{\\n  cursor: pointer;\\n  background: #1d1f2b;\\n  border-radius: 3px;\\n  padding-left:  1em;\\n  padding-right: 1em;\\n}\\n\\nselect{\\n  cursor: pointer;\\n  background: #1d1f2b;\\n  border-radius: 3px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-node-editor.component.css\n// module id = ../../../../../src/app/default-node-editor/default-node-editor.component.css\n// module chunks = main","module.exports = \"<div class=\\\"default-node-editor\\\" *ngIf=\\\"nodeViewDescriptor;else noDetails\\\">\\n\\t<div class =\\\"Attributes\\\" *ngIf=\\\"nodeViewDescriptor.attributes.length !=0\\\">\\n\\t\\t<h4> Attributes: </h4>\\n\\t\\t<ul>\\n\\t\\t\\t<li *ngFor=\\\"let att of nodeViewDescriptor.attributes\\\">\\n\\t\\t\\t\\t{{att.name}} ({{att.type}}) : <default-einput [type]=\\\"att.type\\\" [initialValue]=\\\"att.value\\\" (value)=\\\"AttributeChange(att,$event)\\\" > </default-einput>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\t</div>\\n\\n\\t<div class=\\\"References\\\" *ngIf=\\\"nodeViewDescriptor.references.length !=0\\\">\\n\\t\\t<h4> References: </h4>\\n\\t\\t<ul>\\n\\t\\t\\t<li *ngFor=\\\"let ref of nodeViewDescriptor.references\\\">\\n\\t\\t\\t\\t{{ref.name}}\\n\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t<li *ngFor=\\\"let refNode of ref.nodes\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"removeBtn\\\" (click)=\\\"RemoveReferenceClick(refNode.nodeId,ref)\\\">X</span> {{refNode.name}}  : ({{refNode.nodeId}})\\n\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t<div *ngIf=\\\"ref.crossReference == false\\\">\\n\\t\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t\\t<li *ngFor=\\\"let type of ref.possibleTypes\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"textbtn\\\" (click)=\\\"AddReferenceClick(ref,type)\\\">Add {{type}}</span>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div *ngIf=\\\"ref.crossReference == true\\\" >\\n\\t\\t\\t\\t\\t<select (change)=\\\"AddCrossReference(ref,$event.target.value)\\\">\\n\\t\\t\\t\\t\\t\\t<option selected disabled>Add Cross Reference</option>\\n\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let node of ref.possibleCrossReferences\\\" [value]=\\\"node.nodeId\\\">\\n  \\t\\t\\t\\t\\t\\t{{node.name}}\\n\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\t\\t\\n\\t</div>\\n</div>\\n\\n<ng-template #noDetails>\\n\\tNo nodeViewDescriptor\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-node-editor.component.html\n// module id = ../../../../../src/app/default-node-editor/default-node-editor.component.html\n// module chunks = main","import { Component,EventEmitter, Input, Output, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DefaultViewDescriptor, Attribute, Reference } from '../default-view-descriptor';\nimport {NodeReference} from '../node-reference';\nimport { EditService } from'../services/edit.service';\nimport {FileDetails } from '../file-details';\nimport {AbstractSyntaxTree } from '../abstract-syntax-tree';\n\n@Component({\n  selector: 'default-node-editor',\n  templateUrl: './default-node-editor.component.html',\n  styleUrls: ['./default-node-editor.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DefaultNodeEditorComponent implements OnInit {\n\n  constructor(\n    private editService: EditService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  @Input() projId: string;\n  @Input() fileDetails: FileDetails;\n  @Input() nodeViewDescriptor: DefaultViewDescriptor;\n  @Input() nodeAST : AbstractSyntaxTree;\n  @Output() refresh = new EventEmitter<Boolean>();\n\n\n  test(o: any) {\n    console.log(\"edit\" + o);\n  }\n\n  AttributeChange(att: Attribute, value: any): void {\n    console.log(this.fileDetails);\n\n    //What to do here? save?\n    //Locally Validate\n    this.editService.validateAttribute(this.projId, this.fileDetails, this.nodeViewDescriptor.nodeId, att.name, value).subscribe(a=>null);\n    this.editService.updateAttribute(this.projId, this.fileDetails, this.nodeViewDescriptor.nodeId, att.name, value).subscribe(a=>null);\n  }\n\n\n  AddReferenceClick(ref: Reference,type?:string): void {\n    console.log(\"Add \" + ref.name);\n    this.editService.addReference(this.projId, this.fileDetails, this.nodeViewDescriptor.nodeId, ref.name, type).subscribe(a=>{this.nodeAST.addChild(a);this.refreshView()});\n  }\n\n\tRemoveReferenceClick(nodeId: string, ref:Reference) {\n    console.log(\"Remove \" + nodeId);\n    this.editService.removeReference(this.projId, this.fileDetails, this.nodeViewDescriptor.nodeId, nodeId, ref.name)\n    .subscribe(a=>{this.nodeAST.removeChild(nodeId);this.refreshView()});\n\t}\n\n  AddCrossReference(ref:Reference, childId:string) : void{\n    console.log(\"add cross ref childID: \" + childId);\n\n    this.editService.addCrossReference(this.projId,this.fileDetails,this.nodeViewDescriptor.nodeId,ref.name,childId).subscribe(a=>{this.refreshView()});\n  }\n\n  refreshView(){\n    this.refresh.emit(true);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-node-editor/default-node-editor.component.ts","import { ViewDescriptor } from './view-descriptor';\nimport {NodeReference} from './node-reference';\n\nexport class Attribute{\n\t//The name of the attribute this describes\n\tname:string;\n\n\t//The datatype of the attribute\n\ttype:string;\n\n\t//The initial value of the attribute\n\tvalue:string;\n}\n\nexport class Reference{\n\t//The name of the referenceSet\n\tname:string;\n\n\t//The possible types this reference may contain\n\tpossibleTypes:string[];\n\n\t//Whether or not this reference represents a crossReference\n\tcrossReference :boolean;\n\n\t//The possible nodes this reference could cross reference\n\tpossibleCrossReferences : NodeReference[];\n\n\t//The list of nodes references\n\tnodes:NodeReference[];\n}\n\n\nexport class DefaultViewDescriptor  implements ViewDescriptor{\n\t\n\tstatic readonly DEFAULT_TYPE = \"default\"\n\n\t//The type of the descriptor\n\ttype:string;\n\n\t//List of the nodes attributes to display\n\tattributes: Attribute[];\n\n\t//List of the node's reference sets to display\n\treferences: Reference[];\n\n\t//The id of the node this describes\n\tnodeId: string;\n\n\tconstructor(atts:Attribute[],refs:Reference[],id:string){\n\t\tthis.type = \"default\";\n\t\tthis.attributes = atts;\n\t\tthis.references = refs;\n\t\tthis.nodeId = id;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/default-view-descriptor.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.hidden { \\n  visibility: hidden;\\n }\\n\\n.container {\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n}\\n\\n.title{\\n    width: 100%;\\n    text-align: center;\\n}\\n\\n\\n.middlepane .savefilebtn{\\n  cursor:pointer;\\n  background-color: #eee;\\n  color: black;\\n  border-radius: 3px;\\n  padding-left:  1em;\\n  padding-right: 1em;\\n}\\n\\n.leftpane .newfilebtn{\\n  cursor:pointer;\\n  background-color: #eee;\\n  color: black;\\n  border-radius: 3px;\\n  padding-left:  1em;\\n  padding-right: 1em;\\n}\\n\\n.leftpane ul li{\\n  list-style-type: none;\\n  margin-top: 0.2em;\\n}\\n\\n\\n.leftpane ul li .textbtn{\\n  cursor: pointer;\\n  color: white;\\n  background: #1d1f2b;\\n  border-radius: 3px;\\n  padding-left:  1em;\\n  padding-right: 1em;\\n}\\n\\n.middlepane >tree-view {\\n  background-color: grey;\\n}\\n\\n.leftpane {\\n  width: 14%;\\n  height: 100%;\\n  float: left;\\n}\\n\\n.middlepane {\\n  width: 24%;\\n  height: 100%;\\n  float: left;\\n}\\n\\n.rightpane {\\n  width: 60%;\\n  height: 100%;\\n  position: relative;\\n  float: right;\\n  overflow: auto;\\n}\\n\\n.removeBtn{\\n  cursor: pointer;\\n  background: #d12e0e;\\n  border-radius: 3px;\\n  padding-left:  1em;\\n  padding-right: 1em;\\n}\\n\\n.rightpane p{\\n  padding-left:15px; \\n}\\n\\n.leftpane,.middlepane,.rightpane{\\n  border-radius: 4px;\\n  background-color: grey;\\n  margin: .3em;\\n  height: 75vh;\\n}\\n\\n.leftpane h3, .middlepane h3, .rightpane h3{\\n  padding-top: 0.2em;\\n  margin-top: 0.2em ;\\n  text-align: center;\\n}\\n\\n.leftpane *, .middlepane *, .rightpane *{\\n    background-color: grey;\\n}\\n\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/editor/editor.component.css\n// module id = ../../../../../src/app/editor/editor.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"project;else notFound\\\"> \\n\\t<h1 class=\\\"title\\\"> Editor : {{project.details.name}} </h1>\\n\\t<div class=\\\"container\\\">\\n\\t  <div class=\\\"leftpane\\\">\\n\\t  \\t<h3>Files</h3>\\n\\t    <ul>\\n\\t      <li *ngFor=\\\"let file of project.files\\\">\\n\\t     \\t\\t<span class=\\\"textbtn\\\" (click)=\\\"loadFile(file)\\\">{{file.name}}</span>\\n\\t      </li>\\n\\t    </ul>\\n\\t    <a class=\\\"newfilebtn\\\" (click)=\\\"newFileClick()\\\"> New File </a>\\n\\t  </div>\\n\\n\\t  <div class=\\\"middlepane\\\">\\n\\t  \\t<h3>Tree</h3>\\n\\t  \\t<div *ngIf=\\\"openFile\\\">\\n\\t\\t   <tree-view [treeRoot]=\\\"openFile.treeRoot\\\" (clickedNode)=\\\"getNodeView($event)\\\"></tree-view>\\n\\t\\t   <a class=\\\"savefilebtn\\\" [ngClass]=\\\"{hidden: !valid}\\\" (click)=\\\"saveFileClick()\\\"> Save File </a>\\n\\t\\t  </div>\\n\\t\\t</div>\\n\\n\\t  <div class=\\\"rightpane\\\">\\n\\t    <h3>Edit</h3>\\n\\t    <div *ngIf=\\\"nodeViewDescriptor\\\">\\n\\t    \\t<div *ngIf=\\\"isCustomView(nodeViewDescriptor)\\\">\\n\\t     \\t\\t<custom-node-editor [nodeViewDescriptor]=\\\"nodeViewDescriptor\\\" [fileDetails]=\\\"openFile.details\\\" [projId]=\\\"project.details.id\\\" [nodeAST]=\\\"openNodeAST\\\" (refresh)=\\\"refreshView()\\\"></custom-node-editor>\\t\\n\\t\\t  \\t</div>\\n\\t\\t  \\t<div *ngIf=\\\"isDefaultView(nodeViewDescriptor)\\\">\\n\\t     \\t\\t<default-node-editor [nodeViewDescriptor]=\\\"nodeViewDescriptor\\\" [fileDetails]=\\\"openFile.details\\\" [projId]=\\\"project.details.id\\\" [nodeAST]=\\\"openNodeAST\\\" (refresh)=\\\"refreshView()\\\"></default-node-editor>\\n\\t\\t  \\t</div>\\n\\t\\t  </div>\\n\\t  </div>\\n\\t</div>\\n</div>\\n\\n<ng-template #notFound>\\n\\t<h1> Invalid Project ID </h1>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/editor/editor.component.html\n// module id = ../../../../../src/app/editor/editor.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { LanguageSpec } from '../language-spec';\n//import { MockAvailableLanguageService } from '../mockServices/available-language.service';\nimport {LanguageService } from '../services/language.service'\nimport { ProjectsService } from '../services/projects.service';\nimport { Project } from '../project';\nimport { TreeViewComponent } from '../treeView/tree-view.component';\nimport { File} from '../file';\nimport { FileDetails } from '../file-details';\nimport { AbstractSyntaxTree } from '../abstract-syntax-tree';\n\nimport {DefaultViewDescriptor} from '../default-view-descriptor';\nimport {CustomViewDescriptor} from '../custom-view-descriptor';\nimport {ViewDescriptor} from '../view-descriptor';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n\n\tproject : Project;\n  openFile : File; //open file if is one\n  nodeViewDescriptor : ViewDescriptor; //Data about current node, used to draw the nodeEdit\n  valid : boolean; //Is the current file state valid?\n  openNodeAST: AbstractSyntaxTree; //the node currently being projected (null if no such node)\n\n  constructor(\n  \tprivate route:ActivatedRoute,\n  \tprivate availableLangService: LanguageService,\n  \tprivate projectService: ProjectsService \n  ) { }\n\n  ngOnInit() {\n\n  \tconst id = this.route.snapshot.paramMap.get('id');\n  \tconsole.log(id);\n    this.projectService.getProject(id).subscribe(prj => this.project = prj);\n    this.valid = true;\n  }\n\n  loadFile(file:FileDetails){\n    //this.openFile = file;\n    console.log(\"Opened \"+ file.name)\n    this.projectService.getFile(this.project.details.id,file).subscribe(a=>this.openFile = a);\n  }\n\n  newFileClick(){\n   var name : string = \"\";\n    while(name == \"\" ){\n      var name = prompt(\"Please enter file name:\");\n      if (name == null) {\n        return //user cancelled the request\n      } else if(this.project.files.find(file => file.getNameWithoutExtension() == name) != null){\n        alert(\"File name already exists\");\n        name = \"\";  \n      }\n      \n    }\n    this.projectService.addFileToProject(this.project.details.id, name).subscribe(fileDetail => this.project.files.push(fileDetail));\n  }\n\n  getNodeView(node:AbstractSyntaxTree){\n    this.projectService.getNode(this.project.details.id,this.openFile.details,node).subscribe(a =>\n      {\n        this.openNodeAST = node;\n        this.nodeViewDescriptor = null;\n        this.nodeViewDescriptor = a;\n      })\n  }\n\n  saveFileClick(){\n    this.projectService.saveFile(this.project.details.id,this.openFile.details).subscribe(a=>null);\n  }\n\n  isDefaultView(obj :any){\n    return (obj.type == DefaultViewDescriptor.DEFAULT_TYPE);\n  }\n\n  isCustomView(obj :ViewDescriptor){\n    return (obj.type == CustomViewDescriptor.CUSTOM_TYPE);\n  }\n\n  //Refreshes the node view for the currently projected node\n  refreshView(){\n    this.getNodeView(this.openNodeAST);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/editor/editor.component.ts","export class FileDetails{\n\tname: string;\n\t\n\n\tconstructor(name:string){\n\t\tthis.name = name;\n\t}\n\n\tpublic getExtension() : string {\n\t\treturn this.name.substring( this.name.lastIndexOf('.'));\n\t}\n\n\tpublic getNameWithoutExtension(): string{\n\t\treturn this.name.substring(0, this.name.lastIndexOf('.'));\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/file-details.ts","import { AbstractSyntaxTree } from './abstract-syntax-tree';\nimport { FileDetails } from './file-details'\n\nexport class File{\n\ttreeRoot : AbstractSyntaxTree; //The abstract syntax tree which makes up the file\n\tdetails : FileDetails;\n\n\tconstructor(treeRoot: AbstractSyntaxTree, details:FileDetails){\n\t\tthis.treeRoot = treeRoot;\n\t\tthis.details = details;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/file.ts","export class LanguageSpec{\n\tname: string\n\tfileExtension : string\n\n\tconstructor(name: string, ext: string){\n\t\tthis.name = name;\n\t\tthis.fileExtension = ext;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/language-spec.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n\nimport { MessageService } from './message.service';\nimport { LanguageSpec } from '../language-spec';\nimport { LANGUAGESPEC } from './mock-languages';\n\n\n@Injectable()\nexport class MockAvailableLanguageService {\n//sa\n\tconstructor(\n\t\tprivate messageService:MessageService,\n\t\tprivate http:HttpClient\n\t) {};\n\n  getLanguages() : Observable<LanguageSpec> {\n\n  \tthis.messageService.addMessage(\"Available Language Service: Getting available languages\");\n  \treturn of(LANGUAGESPEC)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/mockServices/available-language.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessageService {\n\n\tpublic messages :string[] = [];\n\n\taddMessage(msg: string) : void {\n\t\tthis.messages.push(msg);\n\t\tconsole.log(\"LOG: \" + msg);\n\t}\n\n\tclearMessages() : void{\n\t\tthis.messages = [];\t\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/mockServices/message.service.ts","import {LanguageSpec} from '../language-spec';\n\nexport const LANGUAGESPEC : LanguageSpec = \n\t{name:\"mydsl\", fileExtension:\".mydsl\"}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/mockServices/mock-languages.ts","import { CustomViewDescriptor, AttributeController } from '../custom-view-descriptor';\n\n\n\nexport class MOCKNODEDETAILS{\n\t\n\n\tstatic htmlView : string = '<button (click)=\"test()\" id=\"DynamicTest\">DynamicTest</button><h1>Greetings!</h1> <input type=\"text\" id=\"inputId\">'\n\t\n\tstatic attributeController : AttributeController = {\n\t\t\t\tgetter:'document.getElementById(\"inputId\").value',\n\t\t\t\tsetter:'document.getElementById(\"inputId\").value = X',\n\t\t\t\tvalidator:'true', \n\t\t\t\tattributeName:'name',\n\t\t\t\tnodeId:'2',\n\t\t\t\tinitialValue : 'INITIAL VALUE'\n\t}\n\n\tpublic static DeclarationMain : CustomViewDescriptor = \n\t\tnew CustomViewDescriptor( MOCKNODEDETAILS.htmlView, [MOCKNODEDETAILS.attributeController], []);\n\t\t \n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/mockServices/mock-node-details.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer:DomSanitizer){}\n\n  transform(style) {\n    return this.sanitizer.bypassSecurityTrustHtml(style);\n    //return this.sanitizer.bypassSecurityTrustStyle(style);\n    // return this.sanitizer.bypassSecurityTrustXxx(style); - see docs\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/safe-html.pipe.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n\nimport { MessageService } from './message.service';\nimport { LanguageSpec } from '../language-spec';\nimport { LANGUAGESPEC } from '../mockServices/mock-languages';\n\n\n@Injectable()\nexport class AvailableLanguagesService {\n\tconstructor(\n\t\tprivate messageService:MessageService,\n\t\tprivate http:HttpClient\n\t) {};\n\n  getLanguages() : Observable<LanguageSpec> {\n\n  \tthis.messageService.addMessage(\"Available Language Service: Getting available languages\");\n  \treturn of(LANGUAGESPEC)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/available-languages.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n\nimport { Observable } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport 'rxjs/add/operator/map';\n\nimport { MessageService } from '../mockServices/message.service';\nimport { ProjectDetails } from '../project-details';\nimport { LanguageSpec } from '../language-spec';\nimport { Project } from '../project';\nimport { FileDetails } from '../file-details';\nimport { File } from '../file';\nimport { AbstractSyntaxTree } from '../abstract-syntax-tree';\n\nimport { ValidNodeResponse, ValidNodeRawResponse  } from './responses/valid-node-response';\nimport { UpdateNodeResponse, UpdateNodeRawResponse  } from './responses/update-node-response';\nimport { AddReferenceRawResponse, AddReferenceResponse } from './responses/add-reference-response';\nimport { RemoveReferenceRawResponse, RemoveReferenceResponse } from './responses/remove-reference-response';\n\n\n@Injectable()\nexport class EditService {\n\n  constructor(\n    private messageService : MessageService,\n    private http : HttpClient\n    ) { }\n\n\n  private readonly serviceUrl : string = `/pe-service`;\n\n  validateAttribute(projId:string, fileDetails:FileDetails, nodeId:string, attributeName:string, newValue:any) : Observable<ValidNodeResponse>{\n  \tthis.log(\"Validate Attribute: \" + attributeName);\n    return this.http.get<ValidNodeRawResponse>(this.serviceUrl,\n      {params: new HttpParams()\n      \t.append('serviceType','validate-node')\n      \t.append('file-name', fileDetails.name)\n      \t.append('project-name',projId)\n      \t.append('node-id',nodeId)\n        .append('attribute-name',attributeName)\n        .append('value',newValue)\n      }).map( a => new ValidNodeResponse(a));\n  }\n\n  updateAttribute(projId: string, fileDetails: FileDetails, nodeId: string, attributeName: string, newValue: any): Observable<UpdateNodeResponse> {\n    //TODO change to post\n    this.log(\"Update attribiute: \"  + attributeName + \" to \" +newValue);\n    console.log(\"updating attribute\")\n    return this.http.get<UpdateNodeRawResponse>(this.serviceUrl,\n      {\n        params: new HttpParams()\n          .append('serviceType', 'update-attribute')\n          .append('file-name', fileDetails.name)\n          .append('project-name', projId)\n          .append('node-id', nodeId)\n          .append('attribute-name', attributeName)\n          .append('value', newValue)\n      }).map(a => new UpdateNodeResponse(a));\n  }\n\n  addReference(projId: string, fileDetails: FileDetails, nodeId: string, referenceName: string, type?:string): Observable<AbstractSyntaxTree> {\n    this.log(\"Add ref: \" + type)\n    var paramsparams = new HttpParams()\n          .append('serviceType', 'add-reference')\n          .append('file-name', fileDetails.name)\n          .append('project-name', projId)\n          .append('node-id', nodeId)\n          .append('reference-name', referenceName)\n\n    if(type != null){\n      paramsparams = paramsparams.append('child-type',type);\n    }\n          \n    return this.http.post<AddReferenceRawResponse>(this.serviceUrl,{\"a\":\"a\"},\n      {\n        params: paramsparams\n      }).map(a => new AddReferenceResponse(a).getAst()); \n  }\n\n  addCrossReference(projId: string, fileDetails: FileDetails, nodeId: string, referenceName: string, childId:string): Observable<any> {\n    this.log(\"Add crossRef\")\n    var paramsparams = new HttpParams()\n          .append('serviceType', 'add-reference')\n          .append('file-name', fileDetails.name)\n          .append('project-name', projId)\n          .append('node-id', nodeId)\n          .append('reference-name', referenceName)\n          .append('cross-reference', 'true')\n          .append('child-id',childId)\n          \n    return this.http.get<AddReferenceRawResponse>(this.serviceUrl,\n      {\n        params: paramsparams\n      }); \n  }\n\n  removeReference(projId: string, fileDetails: FileDetails, nodeId: string, toRemoveId: string, referenceName:string): Observable<boolean> {\n    this.log(\"Remove ref: \"  + toRemoveId);\n    return this.http.get<RemoveReferenceRawResponse>(this.serviceUrl,\n      {\n        params: new HttpParams()\n          .append('serviceType', 'remove-reference')\n          .append('file-name', fileDetails.name)\n          .append('project-name', projId)\n          .append('node-id', nodeId)\n          .append('reference-id', toRemoveId)\n          .append('reference-name', referenceName)\n      }).map(a => new RemoveReferenceResponse(a).getSuccess()); \n  }\n\n\n  private log(message:string):void{\n    this.messageService.addMessage(\"Edit Service: \" + message);\n  }\n\n\n\n/*\n  validateNode(projId:string, fileDetails:FileDetails, nodeId:string) : Observable<ValidNodeResponse>{\n    return this.http.get<ValidNodeRawResponse>(this.serviceUrl,\n      {params: new HttpParams()\n        .append('serviceType','valid-node')\n        .append('file-name', fileDetails.getFullName())\n        .append('project-name',projId)\n        .append('node-id',nodeId)\n      }).map( a => new ValidNodeResponse(a));\n  }*/\n\n\n  /*\n  TO WRITE:\n\n  validateNode(projID, nodeID, fileDetails)\n\tSaveFile(fileDetails, projID)\n\n\n\t*/\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/edit.service.ts","\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n\nimport { MessageService } from '..//mockServices/message.service';\nimport { LanguageSpec } from '../language-spec';\nimport { GetLanguageRawResponse } from './responses/get-language-response';\n\n\n@Injectable()\nexport class LanguageService {\n\t\n\tconstructor(\n\t\tprivate messageService:MessageService,\n\t\tprivate http:HttpClient\n\t) {};\n\n\tprivate readonly serviceUrl : string = `/pe-service`;\n\n  getLanguages() : Observable<LanguageSpec[]> {\n\n  \tthis.messageService.addMessage(\"Available Language Service: Getting available languages\");\n\t  return this.http.get<GetLanguageRawResponse>(this.serviceUrl,\n      {params: new HttpParams()\n      \t.append('serviceType','ls-languages')\n      }).map(a => {console.log(  a.languages);\n      \t\tconsole.log(a.languages[0].Name);\n      \t\treturn [new LanguageSpec(a.languages[0].Name,a.languages[0].FileExtension)]});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/language.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessageService {\n\n\tpublic messages :string[] = [];\n\n\taddMessage(msg: string) : void {\n\t\tthis.messages.push(msg);\n\t\tconsole.log(\"LOG: \" + msg);\n\t}\n\n\tclearMessages() : void{\n\t\tthis.messages = [];\t\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/message.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n\nimport { Observable } from 'rxjs/Rx';\nimport { of } from 'rxjs/observable/of';\nimport 'rxjs/add/operator/map';\n\nimport { MessageService } from '../mockServices/message.service';\nimport { ProjectDetails } from '../project-details';\nimport { LanguageSpec } from '../language-spec';\nimport { Project } from '../project';\nimport { FileDetails } from '../file-details';\nimport { File } from '../file';\nimport { AbstractSyntaxTree } from '../abstract-syntax-tree';\nimport { ViewDescriptor } from '../view-descriptor';\nimport { CustomViewDescriptor } from '../custom-view-descriptor';\nimport { GetNodeResponse, GetNodeRawResponse } from './responses/get-node-response';\nimport { SaveFileResponse, SaveFileRawResponse } from './responses/save-file-response';\n\n//TODO Delete\nimport{ MOCKNODEDETAILS   } from '../mockServices/mock-node-details'\n\n@Injectable()\nexport class ProjectsService {\n\n  constructor(\n    private messageService : MessageService,\n    private http : HttpClient\n    ) { }\n\n  private readonly serviceUrl : string = `/pe-service`;\n  \n  getProjectDetails(): Observable<ProjectDetails[]> {\n  \tthis.log(\"getting project details\");\n  \treturn this.http.get(this.serviceUrl, \n      {params: new HttpParams().append('serviceType','ls-projects')})\n      .map( res => <String[]>(res[\"projectnames\"])).map(a =>a.map(this.stringToProjectDetails));\n  }\n\n  private stringToProjectDetails(s:string ) : ProjectDetails{\n    return {id:s, name: s}\n  }\n\n  addNewProject(name: string) : Observable<string>{\n    this.log(\"Add new project: \" + name);\n  \tvar b : Observable<string> = this.http.get(this.serviceUrl,\n      {params: new HttpParams().append('serviceType', 'add-project').append('name',name)}).map(a=>name);\n    return b;\n  }\n\n  getProject(id:string) : Observable<Project>{    \n    this.log(\"retrieving project id: \" + id);\n    var b : Observable<Project> = this.http.get(this.serviceUrl,\n      {params: new HttpParams().append('serviceType', 'get-project').append('name',id)})\n      .map(a=> a[\"Files\"])\n      .map<string[],Project>(ls => {var files = ls.map(a=> new FileDetails(a)); return {details:{name:id,id:id},files:files}});\n    return b;\n  }\n\n  getFile(projId:string, fileDetails:FileDetails): Observable<File>{\n    this.log(\"Get file: \" + fileDetails.name);\n    var a = this.http.get(this.serviceUrl,\n      {params: new HttpParams().append('serviceType','get-file').append('file-name', fileDetails.name).append('project-name',projId)})\n      .map(a=> new File(new AbstractSyntaxTree(a[\"ast\"]), fileDetails));\n    return a;\n  }\n\n\n  //TODO refactor out into separate service? \n  //TODO Modify service so it returns something other than default node response\n  getNode(projId: string, fileDetails:FileDetails, node:AbstractSyntaxTree): Observable<ViewDescriptor>{\n    this.log(\"Get Node: \" + node.nodeId);\n    return this.http.get<ViewDescriptor>(this.serviceUrl,\n      {params: new HttpParams().append('serviceType','get-node')\n      .append('file-name', fileDetails.name)\n      .append('project-name',projId)\n      .append('node-id',node.nodeId)});\n  }\n\n\n  //TODO delete once done\n  mockgetNode(projId: string, fileDetails:FileDetails, node:AbstractSyntaxTree): Observable<ViewDescriptor>{\n    console.log(\"Instance of (proj serv): \" + (MOCKNODEDETAILS.DeclarationMain instanceof CustomViewDescriptor ));\n    \n    return of(MOCKNODEDETAILS.DeclarationMain );\n\n  }\n\n  addFileToProject(projId:string , fileName:string) : Observable<FileDetails>{\n    this.log(\"adding file \"+ fileName + \"to project \" + projId);\n    \n    var b : Observable<FileDetails> = this.http.get(this.serviceUrl,\n      {params: new HttpParams().append('serviceType', 'add-file')\n      .append('name',fileName)\n      .append('project-name',projId)})\n      .map(a => new FileDetails(a[\"name\"]));\n    return b;\n  }\n\n  saveFile(projId:string , fileDetails:FileDetails) : Observable<SaveFileResponse>{\n    this.log(\"saving file \"+ fileDetails.name + \" to project \" + projId);\n    \n    return this.http.get<SaveFileRawResponse>(this.serviceUrl,\n      {params: new HttpParams().append('serviceType', 'save-file')\n      .append('file-name',fileDetails.name)\n      .append('project-name',projId)})\n      .map(a => new SaveFileResponse(a));\n  }\n  \n  private log(message:string):void{\n    this.messageService.addMessage(\"Projects Service: \" + message);\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/projects.service.ts","import { AbstractSyntaxTree } from '../../abstract-syntax-tree';\n\nexport class AddReferenceRawResponse{\n\tast: AbstractSyntaxTree;\n}\n\nexport class AddReferenceResponse{\n\n\trawResponse: AddReferenceRawResponse;\n\tannotatedAst: AbstractSyntaxTree;\n\n\tconstructor(rawResponse:AddReferenceRawResponse){\n\t\tthis.rawResponse = rawResponse;\n\t\tthis.annotatedAst = new AbstractSyntaxTree(this.rawResponse.ast);\n\t}\n\n\tgetAst():AbstractSyntaxTree {\n\t\treturn this.annotatedAst;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/responses/add-reference-response.ts","import { AbstractSyntaxTree } from '../../abstract-syntax-tree';\n\nexport class RemoveReferenceRawResponse{\n\tsuccess: boolean;\n}\n\nexport class RemoveReferenceResponse{\n\n\trawResponse: RemoveReferenceRawResponse;\n\n\tconstructor(rawResponse:RemoveReferenceRawResponse){\n\t\tthis.rawResponse = rawResponse;\n\t}\n\n\tgetSuccess(): boolean{ \n\t\treturn this.rawResponse.success\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/responses/remove-reference-response.ts","export class SaveFileRawResponse{\n  success: boolean;\n  message : string;\n}\n\nexport class SaveFileResponse{\n  rawResponse: SaveFileRawResponse;\n\n  constructor(rawResponse:SaveFileRawResponse){\n    this.rawResponse = rawResponse;\n  }\n\n  getSuccess(): boolean{\n    return this.rawResponse.success;\n  }\n\n  getMessage():string{\n    return this.rawResponse.message;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/responses/save-file-response.ts","export class UpdateNodeRawResponse{\n  success: boolean;\n  message : string;\n}\n\nexport class UpdateNodeResponse{\n  rawResponse: UpdateNodeRawResponse;\n\n  constructor(rawResponse:UpdateNodeRawResponse){\n    this.rawResponse = rawResponse;\n  }\n\n  getSuccess(): boolean{\n    return this.rawResponse.success;\n  }\n\n  getMessage():string{\n    return this.rawResponse.message;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/responses/update-node-response.ts","export class ValidNodeRawResponse{\n\tvalid: boolean;\n\tmessage : string;\n}\n\nexport class ValidNodeResponse{\n\trawResponse: ValidNodeRawResponse;\n\n\tconstructor(rawResponse:ValidNodeRawResponse){\n\t\tthis.rawResponse = rawResponse;\n\t}\n\n\tgetValid(): boolean{\n\t\treturn this.rawResponse.valid;\n\t}\n\n\tgetMessage():string{\n\t\treturn this.rawResponse.message;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/services/responses/valid-node-response.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".title {\\n\\ttext-align: center;\\n\\t\\n}\\n\\n.startup { \\n\\ttext-align: center;\\n\\twidth: 30%;\\n\\tmargin: auto;\\n}\\n\\n.startup li{\\n\\tcursor: pointer;\\n\\tborder-radius: 4px;\\n\\tbackground-color: #eee;\\n\\tmargin: .5em;\\n\\tpadding: 0.6em 0;\\n\\twidth: auto;\\n\\tlist-style-type: none;\\n}\\n\\n.startup li a{\\n\\tcolor: black;\\n\\tbackground-color: #eee;\\n\\ttext-decoration: none;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/startup/startup.component.css\n// module id = ../../../../../src/app/startup/startup.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"title\\\"> Projectional Editor </h1>\\n<div class=\\\"startup\\\">\\n\\t<h2> Create New Project </h2>\\n\\t<li *ngFor=\\\"let lang of availableLanguages\\\">\\n\\t\\t<a class=\\\"newProjectButton\\\" (click)=\\\"newProjectClick()\\\">Create new {{lang.name}} Project </a>\\n\\t</li>\\n\\t<h2> Open Existing Project </h2>\\n\\t<li *ngFor=\\\"let proj of existingProjects\\\">\\n\\t\\t<a class=\\\"existingProjectButton\\\" routerLink=\\\"/edit/{{proj.id}}\\\"> Open {{proj.name}}</a>\\n\\t</li>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/startup/startup.component.html\n// module id = ../../../../../src/app/startup/startup.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { LanguageSpec } from '../language-spec';\n//import { MockAvailableLanguageService } from '../mockServices/available-language.service';\nimport { LanguageService } from '../services/language.service';\nimport { ProjectDetails } from '../project-details';\nimport { Router } from '@angular/router';\nimport { ProjectsService} from '../services/projects.service';\n\n@Component({\n  selector: 'app-startup',\n  templateUrl: './startup.component.html',\n  styleUrls: ['./startup.component.css']\n})\n\nexport class StartupComponent implements OnInit {\n  constructor( \n    private availableLangService : LanguageService,\n    private projectsService : ProjectsService,\n    private router : Router\n  ) { }\n\n  availableLanguages : LanguageSpec[] = [];\n  existingProjects : ProjectDetails[];\n\n  ngOnInit() {\n  \tthis.getAvailableLanguages();\n    this.getExistingProjects();\n  }\n\n  getExistingProjects(): void{\n    this.projectsService.getProjectDetails().subscribe(projects => this.existingProjects = projects);\n    console.log(\"test\");\n  }\n\n  getAvailableLanguages() :void {\n  \tthis.availableLangService.getLanguages().subscribe(langs => {this.availableLanguages = langs});\n  }\n\n  newProjectClick(){\n    //this.projectsService.test();\n    var name : string = \"\";\n    \n    while(name == \"\" ){\n      var name = prompt(\"Please enter your project name:\");\n      if (name == null) {\n        return //user cancelled the request\n      } else if(this.existingProjects.find(project => project.name == name) != null){\n        alert(\"Name already exists\");\n        name = \"\";  \n      }\n      \n    }\n    var id = this.projectsService.addNewProject(name);\n    id.subscribe(id => this.router.navigate(['edit/' + id]));\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/startup/startup.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".treeView ul li{\\n\\tlist-style-type: none;\\n\\tmargin-top:0;\\n\\tcursor: pointer;\\n}\\n.treeView ul{\\n\\tmargin-top:0;\\n\\tpadding-left: 10px;\\n}\\n\\n.treeView{\\n\\tcursor: pointer;\\n\\tpadding-left: 10px;\\n}\\n\\n.toggleIcon{\\n\\tcursor: pointer;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/treeView/tree-view.component.css\n// module id = ../../../../../src/app/treeView/tree-view.component.css\n// module chunks = main","module.exports = \"<div class=\\\"treeView\\\" *ngIf=\\\"treeRoot;else notFound\\\">\\n\\t<span class=\\\"toggleIcon\\\" (click)=\\\"treeRoot.toggle()\\\">{{treeRoot.getToggleIcon()}}</span>\\n\\t<span class=\\\"data\\\" (click)=\\\"onClick()\\\">{{treeRoot.name}}</span>\\n\\t    <ul *ngIf=\\\"treeRoot.expanded\\\">\\n\\t      <li *ngFor=\\\"let child of treeRoot.children\\\">\\n\\t        <tree-view [treeRoot]=\\\"child\\\" (clickedNode)=\\\"passUpClickedNode($event)\\\"></tree-view>\\n\\t      </li>\\n\\t    </ul>\\n</div>\\n\\n<ng-template #notFound>\\n\\tNo nodes yet!\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/treeView/tree-view.component.html\n// module id = ../../../../../src/app/treeView/tree-view.component.html\n// module chunks = main","import { Component,EventEmitter, Input, Output, OnInit, ViewEncapsulation } from '@angular/core';\nimport { AbstractSyntaxTree } from '../abstract-syntax-tree';\n\n@Component({\n  selector: 'tree-view',\n  templateUrl: './tree-view.component.html',\n  styleUrls: ['./tree-view.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TreeViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  @Output() clickedNode = new EventEmitter<AbstractSyntaxTree>();\n\n  @Input() treeRoot:AbstractSyntaxTree;\n\n  onClick(){\n  \tthis.clickedNode.emit(this.treeRoot);\n  }\n\n  //if a child is clicked we need to pass up it's clickedNode output as editor is only subscribed to root\n  passUpClickedNode(ast:AbstractSyntaxTree){\n  \tthis.clickedNode.emit(ast);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/app/treeView/tree-view.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/alexander/Documents/Programs/Eclipse Editor For Contributers/xtext-master2/ws/.git/xtext-web/org.eclipse.xtext.peweb/peWebAngularApp/angular-web-ide/src/main.ts"],"sourceRoot":"webpack:///"}