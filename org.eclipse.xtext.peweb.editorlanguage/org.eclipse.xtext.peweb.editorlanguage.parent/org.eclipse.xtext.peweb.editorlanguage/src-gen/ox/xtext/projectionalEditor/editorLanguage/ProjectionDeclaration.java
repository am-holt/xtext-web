/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package ox.xtext.projectionalEditor.editorLanguage;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Projection Declaration</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link ox.xtext.projectionalEditor.editorLanguage.ProjectionDeclaration#getName <em>Name</em>}</li>
 *   <li>{@link ox.xtext.projectionalEditor.editorLanguage.ProjectionDeclaration#getView <em>View</em>}</li>
 *   <li>{@link ox.xtext.projectionalEditor.editorLanguage.ProjectionDeclaration#getAttributes <em>Attributes</em>}</li>
 *   <li>{@link ox.xtext.projectionalEditor.editorLanguage.ProjectionDeclaration#getComponents <em>Components</em>}</li>
 * </ul>
 *
 * @see ox.xtext.projectionalEditor.editorLanguage.EditorLanguagePackage#getProjectionDeclaration()
 * @model
 * @generated
 */
public interface ProjectionDeclaration extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see ox.xtext.projectionalEditor.editorLanguage.EditorLanguagePackage#getProjectionDeclaration_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link ox.xtext.projectionalEditor.editorLanguage.ProjectionDeclaration#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>View</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>View</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>View</em>' containment reference.
   * @see #setView(HtmlSnippet)
   * @see ox.xtext.projectionalEditor.editorLanguage.EditorLanguagePackage#getProjectionDeclaration_View()
   * @model containment="true"
   * @generated
   */
  HtmlSnippet getView();

  /**
   * Sets the value of the '{@link ox.xtext.projectionalEditor.editorLanguage.ProjectionDeclaration#getView <em>View</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>View</em>' containment reference.
   * @see #getView()
   * @generated
   */
  void setView(HtmlSnippet value);

  /**
   * Returns the value of the '<em><b>Attributes</b></em>' containment reference list.
   * The list contents are of type {@link ox.xtext.projectionalEditor.editorLanguage.AttributeDeclaration}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Attributes</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Attributes</em>' containment reference list.
   * @see ox.xtext.projectionalEditor.editorLanguage.EditorLanguagePackage#getProjectionDeclaration_Attributes()
   * @model containment="true"
   * @generated
   */
  EList<AttributeDeclaration> getAttributes();

  /**
   * Returns the value of the '<em><b>Components</b></em>' containment reference list.
   * The list contents are of type {@link ox.xtext.projectionalEditor.editorLanguage.ComponentDeclaration}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Components</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Components</em>' containment reference list.
   * @see ox.xtext.projectionalEditor.editorLanguage.EditorLanguagePackage#getProjectionDeclaration_Components()
   * @model containment="true"
   * @generated
   */
  EList<ComponentDeclaration> getComponents();

} // ProjectionDeclaration
