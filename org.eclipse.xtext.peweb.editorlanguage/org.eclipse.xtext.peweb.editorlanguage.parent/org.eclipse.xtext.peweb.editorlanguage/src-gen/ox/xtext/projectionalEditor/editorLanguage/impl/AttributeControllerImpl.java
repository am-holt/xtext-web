/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package ox.xtext.projectionalEditor.editorLanguage.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import ox.xtext.projectionalEditor.editorLanguage.AttributeController;
import ox.xtext.projectionalEditor.editorLanguage.EditorLanguagePackage;
import ox.xtext.projectionalEditor.editorLanguage.JsSnippet;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Attribute Controller</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ox.xtext.projectionalEditor.editorLanguage.impl.AttributeControllerImpl#getGetter <em>Getter</em>}</li>
 *   <li>{@link ox.xtext.projectionalEditor.editorLanguage.impl.AttributeControllerImpl#getSetter <em>Setter</em>}</li>
 *   <li>{@link ox.xtext.projectionalEditor.editorLanguage.impl.AttributeControllerImpl#getValidater <em>Validater</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AttributeControllerImpl extends MinimalEObjectImpl.Container implements AttributeController
{
  /**
   * The cached value of the '{@link #getGetter() <em>Getter</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGetter()
   * @generated
   * @ordered
   */
  protected JsSnippet getter;

  /**
   * The cached value of the '{@link #getSetter() <em>Setter</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSetter()
   * @generated
   * @ordered
   */
  protected JsSnippet setter;

  /**
   * The cached value of the '{@link #getValidater() <em>Validater</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValidater()
   * @generated
   * @ordered
   */
  protected JsSnippet validater;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AttributeControllerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EditorLanguagePackage.Literals.ATTRIBUTE_CONTROLLER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JsSnippet getGetter()
  {
    return getter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGetter(JsSnippet newGetter, NotificationChain msgs)
  {
    JsSnippet oldGetter = getter;
    getter = newGetter;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EditorLanguagePackage.ATTRIBUTE_CONTROLLER__GETTER, oldGetter, newGetter);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGetter(JsSnippet newGetter)
  {
    if (newGetter != getter)
    {
      NotificationChain msgs = null;
      if (getter != null)
        msgs = ((InternalEObject)getter).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EditorLanguagePackage.ATTRIBUTE_CONTROLLER__GETTER, null, msgs);
      if (newGetter != null)
        msgs = ((InternalEObject)newGetter).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EditorLanguagePackage.ATTRIBUTE_CONTROLLER__GETTER, null, msgs);
      msgs = basicSetGetter(newGetter, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EditorLanguagePackage.ATTRIBUTE_CONTROLLER__GETTER, newGetter, newGetter));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JsSnippet getSetter()
  {
    return setter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSetter(JsSnippet newSetter, NotificationChain msgs)
  {
    JsSnippet oldSetter = setter;
    setter = newSetter;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EditorLanguagePackage.ATTRIBUTE_CONTROLLER__SETTER, oldSetter, newSetter);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSetter(JsSnippet newSetter)
  {
    if (newSetter != setter)
    {
      NotificationChain msgs = null;
      if (setter != null)
        msgs = ((InternalEObject)setter).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EditorLanguagePackage.ATTRIBUTE_CONTROLLER__SETTER, null, msgs);
      if (newSetter != null)
        msgs = ((InternalEObject)newSetter).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EditorLanguagePackage.ATTRIBUTE_CONTROLLER__SETTER, null, msgs);
      msgs = basicSetSetter(newSetter, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EditorLanguagePackage.ATTRIBUTE_CONTROLLER__SETTER, newSetter, newSetter));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JsSnippet getValidater()
  {
    return validater;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValidater(JsSnippet newValidater, NotificationChain msgs)
  {
    JsSnippet oldValidater = validater;
    validater = newValidater;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EditorLanguagePackage.ATTRIBUTE_CONTROLLER__VALIDATER, oldValidater, newValidater);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValidater(JsSnippet newValidater)
  {
    if (newValidater != validater)
    {
      NotificationChain msgs = null;
      if (validater != null)
        msgs = ((InternalEObject)validater).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EditorLanguagePackage.ATTRIBUTE_CONTROLLER__VALIDATER, null, msgs);
      if (newValidater != null)
        msgs = ((InternalEObject)newValidater).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EditorLanguagePackage.ATTRIBUTE_CONTROLLER__VALIDATER, null, msgs);
      msgs = basicSetValidater(newValidater, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EditorLanguagePackage.ATTRIBUTE_CONTROLLER__VALIDATER, newValidater, newValidater));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__GETTER:
        return basicSetGetter(null, msgs);
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__SETTER:
        return basicSetSetter(null, msgs);
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__VALIDATER:
        return basicSetValidater(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__GETTER:
        return getGetter();
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__SETTER:
        return getSetter();
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__VALIDATER:
        return getValidater();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__GETTER:
        setGetter((JsSnippet)newValue);
        return;
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__SETTER:
        setSetter((JsSnippet)newValue);
        return;
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__VALIDATER:
        setValidater((JsSnippet)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__GETTER:
        setGetter((JsSnippet)null);
        return;
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__SETTER:
        setSetter((JsSnippet)null);
        return;
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__VALIDATER:
        setValidater((JsSnippet)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__GETTER:
        return getter != null;
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__SETTER:
        return setter != null;
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER__VALIDATER:
        return validater != null;
    }
    return super.eIsSet(featureID);
  }

} //AttributeControllerImpl
