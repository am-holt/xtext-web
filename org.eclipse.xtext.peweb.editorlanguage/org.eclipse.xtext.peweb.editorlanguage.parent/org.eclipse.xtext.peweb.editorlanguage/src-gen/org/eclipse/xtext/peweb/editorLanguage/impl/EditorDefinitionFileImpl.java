/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package org.eclipse.xtext.peweb.editorLanguage.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.xtext.peweb.editorLanguage.EditorDefinitionFile;
import org.eclipse.xtext.peweb.editorLanguage.EditorLanguagePackage;
import org.eclipse.xtext.peweb.editorLanguage.ImportSection;
import org.eclipse.xtext.peweb.editorLanguage.MainSection;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Editor Definition File</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.eclipse.xtext.peweb.editorLanguage.impl.EditorDefinitionFileImpl#getImports <em>Imports</em>}</li>
 *   <li>{@link org.eclipse.xtext.peweb.editorLanguage.impl.EditorDefinitionFileImpl#getMainSection <em>Main Section</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EditorDefinitionFileImpl extends MinimalEObjectImpl.Container implements EditorDefinitionFile
{
  /**
   * The cached value of the '{@link #getImports() <em>Imports</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImports()
   * @generated
   * @ordered
   */
  protected ImportSection imports;

  /**
   * The cached value of the '{@link #getMainSection() <em>Main Section</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMainSection()
   * @generated
   * @ordered
   */
  protected MainSection mainSection;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EditorDefinitionFileImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EditorLanguagePackage.Literals.EDITOR_DEFINITION_FILE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ImportSection getImports()
  {
    return imports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetImports(ImportSection newImports, NotificationChain msgs)
  {
    ImportSection oldImports = imports;
    imports = newImports;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EditorLanguagePackage.EDITOR_DEFINITION_FILE__IMPORTS, oldImports, newImports);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImports(ImportSection newImports)
  {
    if (newImports != imports)
    {
      NotificationChain msgs = null;
      if (imports != null)
        msgs = ((InternalEObject)imports).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EditorLanguagePackage.EDITOR_DEFINITION_FILE__IMPORTS, null, msgs);
      if (newImports != null)
        msgs = ((InternalEObject)newImports).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EditorLanguagePackage.EDITOR_DEFINITION_FILE__IMPORTS, null, msgs);
      msgs = basicSetImports(newImports, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EditorLanguagePackage.EDITOR_DEFINITION_FILE__IMPORTS, newImports, newImports));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MainSection getMainSection()
  {
    return mainSection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMainSection(MainSection newMainSection, NotificationChain msgs)
  {
    MainSection oldMainSection = mainSection;
    mainSection = newMainSection;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, EditorLanguagePackage.EDITOR_DEFINITION_FILE__MAIN_SECTION, oldMainSection, newMainSection);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMainSection(MainSection newMainSection)
  {
    if (newMainSection != mainSection)
    {
      NotificationChain msgs = null;
      if (mainSection != null)
        msgs = ((InternalEObject)mainSection).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - EditorLanguagePackage.EDITOR_DEFINITION_FILE__MAIN_SECTION, null, msgs);
      if (newMainSection != null)
        msgs = ((InternalEObject)newMainSection).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - EditorLanguagePackage.EDITOR_DEFINITION_FILE__MAIN_SECTION, null, msgs);
      msgs = basicSetMainSection(newMainSection, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EditorLanguagePackage.EDITOR_DEFINITION_FILE__MAIN_SECTION, newMainSection, newMainSection));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE__IMPORTS:
        return basicSetImports(null, msgs);
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE__MAIN_SECTION:
        return basicSetMainSection(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE__IMPORTS:
        return getImports();
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE__MAIN_SECTION:
        return getMainSection();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE__IMPORTS:
        setImports((ImportSection)newValue);
        return;
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE__MAIN_SECTION:
        setMainSection((MainSection)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE__IMPORTS:
        setImports((ImportSection)null);
        return;
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE__MAIN_SECTION:
        setMainSection((MainSection)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE__IMPORTS:
        return imports != null;
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE__MAIN_SECTION:
        return mainSection != null;
    }
    return super.eIsSet(featureID);
  }

} //EditorDefinitionFileImpl
