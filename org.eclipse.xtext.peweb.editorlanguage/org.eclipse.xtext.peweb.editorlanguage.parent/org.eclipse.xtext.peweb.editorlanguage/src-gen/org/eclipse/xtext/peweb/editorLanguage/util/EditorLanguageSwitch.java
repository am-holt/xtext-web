/**
 * generated by Xtext 2.14.0-SNAPSHOT
 */
package org.eclipse.xtext.peweb.editorLanguage.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.eclipse.xtext.peweb.editorLanguage.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.eclipse.xtext.peweb.editorLanguage.EditorLanguagePackage
 * @generated
 */
public class EditorLanguageSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static EditorLanguagePackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EditorLanguageSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = EditorLanguagePackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case EditorLanguagePackage.EDITOR_DEFINITION_FILE:
      {
        EditorDefinitionFile editorDefinitionFile = (EditorDefinitionFile)theEObject;
        T result = caseEditorDefinitionFile(editorDefinitionFile);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.IMPORT_SECTION:
      {
        ImportSection importSection = (ImportSection)theEObject;
        T result = caseImportSection(importSection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.IMPORT:
      {
        Import import_ = (Import)theEObject;
        T result = caseImport(import_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.MAIN_SECTION:
      {
        MainSection mainSection = (MainSection)theEObject;
        T result = caseMainSection(mainSection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.NODE_DECLARATION:
      {
        NodeDeclaration nodeDeclaration = (NodeDeclaration)theEObject;
        T result = caseNodeDeclaration(nodeDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.PROJECTION_DECLARATION:
      {
        ProjectionDeclaration projectionDeclaration = (ProjectionDeclaration)theEObject;
        T result = caseProjectionDeclaration(projectionDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.ATTRIBUTE_DECLARATION:
      {
        AttributeDeclaration attributeDeclaration = (AttributeDeclaration)theEObject;
        T result = caseAttributeDeclaration(attributeDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.COMPONENT_ID:
      {
        ComponentId componentId = (ComponentId)theEObject;
        T result = caseComponentId(componentId);
        if (result == null) result = caseHtmlAnnotation(componentId);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.ATTRIBUTE_CONTROLLER:
      {
        AttributeController attributeController = (AttributeController)theEObject;
        T result = caseAttributeController(attributeController);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.CHILD_ID:
      {
        ChildId childId = (ChildId)theEObject;
        T result = caseChildId(childId);
        if (result == null) result = caseHtmlAnnotation(childId);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.TAG_ID:
      {
        TagId tagId = (TagId)theEObject;
        T result = caseTagId(tagId);
        if (result == null) result = caseHtmlAnnotation(tagId);
        if (result == null) result = caseJsExtraTag(tagId);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.COMPONENT_DECLARATION:
      {
        ComponentDeclaration componentDeclaration = (ComponentDeclaration)theEObject;
        T result = caseComponentDeclaration(componentDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.COMPONENT_CONTROLLER:
      {
        ComponentController componentController = (ComponentController)theEObject;
        T result = caseComponentController(componentController);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.HTML_SNIPPET:
      {
        HtmlSnippet htmlSnippet = (HtmlSnippet)theEObject;
        T result = caseHtmlSnippet(htmlSnippet);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.HTML_ANNOTATION:
      {
        HtmlAnnotation htmlAnnotation = (HtmlAnnotation)theEObject;
        T result = caseHtmlAnnotation(htmlAnnotation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.CODE_LITERAL:
      {
        CodeLiteral codeLiteral = (CodeLiteral)theEObject;
        T result = caseCodeLiteral(codeLiteral);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.CODE_LITERAL_START:
      {
        CodeLiteralStart codeLiteralStart = (CodeLiteralStart)theEObject;
        T result = caseCodeLiteralStart(codeLiteralStart);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.CODE_LITERAL_MID:
      {
        CodeLiteralMid codeLiteralMid = (CodeLiteralMid)theEObject;
        T result = caseCodeLiteralMid(codeLiteralMid);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.CODE_LITERAL_END:
      {
        CodeLiteralEnd codeLiteralEnd = (CodeLiteralEnd)theEObject;
        T result = caseCodeLiteralEnd(codeLiteralEnd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.JS_SNIPPET:
      {
        JsSnippet jsSnippet = (JsSnippet)theEObject;
        T result = caseJsSnippet(jsSnippet);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case EditorLanguagePackage.JS_EXTRA_TAG:
      {
        JsExtraTag jsExtraTag = (JsExtraTag)theEObject;
        T result = caseJsExtraTag(jsExtraTag);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Editor Definition File</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Editor Definition File</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEditorDefinitionFile(EditorDefinitionFile object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Import Section</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Import Section</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImportSection(ImportSection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Import</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Import</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImport(Import object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Main Section</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Main Section</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMainSection(MainSection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Node Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Node Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNodeDeclaration(NodeDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Projection Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Projection Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProjectionDeclaration(ProjectionDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeDeclaration(AttributeDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Component Id</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Component Id</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComponentId(ComponentId object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Attribute Controller</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Attribute Controller</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAttributeController(AttributeController object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Child Id</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Child Id</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseChildId(ChildId object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tag Id</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tag Id</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTagId(TagId object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Component Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Component Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComponentDeclaration(ComponentDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Component Controller</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Component Controller</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComponentController(ComponentController object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Html Snippet</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Html Snippet</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHtmlSnippet(HtmlSnippet object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Html Annotation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Html Annotation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHtmlAnnotation(HtmlAnnotation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Code Literal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Code Literal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCodeLiteral(CodeLiteral object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Code Literal Start</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Code Literal Start</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCodeLiteralStart(CodeLiteralStart object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Code Literal Mid</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Code Literal Mid</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCodeLiteralMid(CodeLiteralMid object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Code Literal End</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Code Literal End</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCodeLiteralEnd(CodeLiteralEnd object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Js Snippet</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Js Snippet</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJsSnippet(JsSnippet object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Js Extra Tag</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Js Extra Tag</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJsExtraTag(JsExtraTag object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //EditorLanguageSwitch
